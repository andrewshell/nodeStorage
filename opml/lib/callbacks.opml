<?xml version="1.0" encoding="ISO-8859-1"?>
<opml version="2.0">
	<head>
		<title>lib/callbacks.js</title>
		<dateModified>&lt;%dateModified%></dateModified>
		<expansionState></expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>300</windowTop>
		<windowLeft>700</windowLeft>
		<windowBottom>900</windowBottom>
		<windowRight>1500</windowRight>
		</head>
	<body text="lib/callbacks.js">
		<outline text=""></outline>
		<outline text="exports.callPublishCallbacks = callPublishCallbacks; "></outline>
		<outline text="exports.callLikeCallbacks = callLikeCallbacks; //4/24/16 by DW"></outline>
		<outline text=""></outline>
		<outline text="var fs = require (&quot;fs&quot;);"></outline>
		<outline text="var utils = require (&quot;daveutils&quot;);"></outline>
		<outline isComment="true" text="var utils = require (&quot;../lib/utils.js&quot;);"></outline>
		<outline text="var s3 = require (&quot;../lib/s3.js&quot;); //so callbacks can do stuff with S3"></outline>
		<outline text="var filesystem = require (&quot;../lib/filesystem.js&quot;);"></outline>
		<outline text=""></outline>
		<outline text="var publishCallbacksFolder = &quot;callbacks/publish/&quot;; "></outline>
		<outline text="var likeCallbacksFolder = &quot;callbacks/like/&quot;; "></outline>
		<outline text=""></outline>
		<outline text="function runUserScript (s, dataforscripts, scriptName) {">
			<outline isComment="true" text="Changes">
				<outline text="11/25/14; 11:17:02 AM by DW">
					<outline text="The central place to run a script. The scriptName param is just used in the error message, so we can tell the user where the script came from."></outline>
					</outline>
				</outline>
			<outline isComment="true" text=""></outline>
			<outline isComment="true" text="console.log (&quot;runUserScript: s == &quot; + s);"></outline>
			<outline isComment="true" text=""></outline>
			<outline text="try {">
				<outline text="if (dataforscripts !== undefined) {">
					<outline text="with (dataforscripts) {">
						<outline created="Thu, 23 Jan 2014 16:59:39 GMT" pgfnum="36438" text="eval (s);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline text="else {">
					<outline created="Thu, 23 Jan 2014 16:59:39 GMT" pgfnum="36438" text="eval (s);"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="catch (err) {">
				<outline text="console.log (&quot;runUserScript: error running \&quot;&quot; + scriptName + &quot;\&quot; == &quot; + err.message);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function runScriptsInFolder (path, dataforscripts, callback) {">
			<outline isComment="true" text="function fsSureFilePath (path, callback) { ">
				<outline text="var splits = path.split (&quot;/&quot;);"></outline>
				<outline text="path = &quot;&quot;; //1/8/15 by DW"></outline>
				<outline text="if (splits.length &gt; 0) {">
					<outline text="function doLevel (levelnum) {">
						<outline text="if (levelnum &lt; (splits.length - 1)) {">
							<outline text="path += splits [levelnum] + &quot;/&quot;;"></outline>
							<outline text="fs.exists (path, function (flExists) {">
								<outline text="if (flExists) {">
									<outline text="doLevel (levelnum + 1);"></outline>
									<outline text="}"></outline>
									</outline>
								<outline text="else {">
									<outline text="fs.mkdir (path, undefined, function () {">
										<outline text="doLevel (levelnum + 1);"></outline>
										<outline text="});"></outline>
										</outline>
									<outline text="}"></outline>
									</outline>
								<outline text="});"></outline>
								</outline>
							<outline text="}"></outline>
							</outline>
						<outline text="else {">
							<outline text="if (callback != undefined) {">
								<outline text="callback ();"></outline>
								<outline text="}"></outline>
								</outline>
							<outline text="}"></outline>
							</outline>
						<outline text="}"></outline>
						</outline>
					<outline text="doLevel (0);"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="else {">
					<outline text="if (callback != undefined) {">
						<outline text="callback ();"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="filesystem.sureFilePath (path, function () {">
				<outline text="fs.readdir (path, function (err, list) {">
					<outline text="if (list !== undefined) { //4/24/16 by DW">
						<outline text="for (var i = 0; i &lt; list.length; i++) {">
							<outline text="var fname = list [i];"></outline>
							<outline text="if (utils.endsWith (fname.toLowerCase (), &quot;.js&quot;)) {">
								<outline text="var f = path + fname;"></outline>
								<outline text="fs.readFile (f, function (err, data) {">
									<outline text="if (err) {">
										<outline text="console.log (&quot;runScriptsInFolder: error == &quot; + err.message);"></outline>
										<outline text="}"></outline>
										</outline>
									<outline text="else {">
										<outline text="runUserScript (data.toString (), dataforscripts, f);"></outline>
										<outline text="}"></outline>
										</outline>
									<outline text="});"></outline>
									</outline>
								<outline text="}"></outline>
								</outline>
							<outline text="}"></outline>
							</outline>
						<outline text="}"></outline>
						</outline>
					<outline text="if (callback != undefined) {">
						<outline text="callback ();"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="});"></outline>
					</outline>
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function callPublishCallbacks (relpath, body, type, screenName) {">
			<outline isComment="true" text="Changes">
				<outline text="3/23/16; 1:22:20 PM by DW">
					<outline text="Change the URL param to the screenName of the user. A much better identifier! :-)"></outline>
					</outline>
				<outline text="3/22/16; 7:03:34 PM by DW">
					<outline text="New optional param, url. It's the URL of the page that's being published. With this info you can figure out if you need to mirror the text somewhere else. I plan to use this to mirror the content from my chatlog on Scripting News."></outline>
					</outline>
				</outline>
			<outline text=""></outline>
			<outline isComment="true" text="callPublishCallbacks: s3path == 2015/10/12/10.html"></outline>
			<outline isComment="true" text="console.log (&quot;callPublishCallbacks: relpath == &quot; + relpath);"></outline>
			<outline text=""></outline>
			<outline text="var dataforscripts = {">
				<outline text="relpath: relpath,"></outline>
				<outline text="body: body,"></outline>
				<outline text="type: type, "></outline>
				<outline text="screenName: screenName //3/23/16 by DW"></outline>
				<outline text="};"></outline>
				</outline>
			<outline text=""></outline>
			<outline text="runScriptsInFolder (publishCallbacksFolder, dataforscripts, function () {">
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function callLikeCallbacks (screenName, nameChatLog, item) { //4/24/16 by DW">
			<outline text="var dataforscripts = {">
				<outline text="screenName: screenName,"></outline>
				<outline text="nameChatLog: nameChatLog,"></outline>
				<outline text="item: item"></outline>
				<outline text="};"></outline>
				</outline>
			<outline text="runScriptsInFolder (likeCallbacksFolder, dataforscripts, function () {">
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		</body>
	</opml>
