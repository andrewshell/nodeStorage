<?xml version="1.0" encoding="ISO-8859-1"?>
<opml version="2.0">
	<head>
		<title>api.js</title>
		<dateModified>&lt;%dateModified%></dateModified>
		<expansionState></expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>300</windowTop>
		<windowLeft>700</windowLeft>
		<windowBottom>900</windowBottom>
		<windowRight>1500</windowRight>
		</head>
	<body text="api.js">
		<outline text="/* The MIT License (MIT) ">
			<outline text=""></outline>
			<outline text="Copyright (c) 2014-2020 Dave Winer "></outline>
			<outline text=""></outline>
			<outline text="Permission is hereby granted, free of charge, to any person obtaining a copy"></outline>
			<outline text="of this software and associated documentation files (the &quot;Software&quot;), to deal"></outline>
			<outline text="in the Software without restriction, including without limitation the rights"></outline>
			<outline text="to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"></outline>
			<outline text="copies of the Software, and to permit persons to whom the Software is"></outline>
			<outline text="furnished to do so, subject to the following conditions:"></outline>
			<outline text=""></outline>
			<outline text="The above copyright notice and this permission notice shall be included in all"></outline>
			<outline text="copies or substantial portions of the Software."></outline>
			<outline text=""></outline>
			<outline text="THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"></outline>
			<outline text="IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"></outline>
			<outline text="FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE"></outline>
			<outline text="AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"></outline>
			<outline text="LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"></outline>
			<outline text="OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE"></outline>
			<outline text="SOFTWARE."></outline>
			<outline text=" "></outline>
			<outline text="structured listing: http://scripting.com/listings/nodestorageapi.html"></outline>
			<outline text="*/"></outline>
			</outline>
		<outline text=""></outline>
		<outline text="var twStorageConsts = {">
			<outline isComment="true" text="Changes">
				<outline text="4/20/19; 1:11:58 PM by DW">
					<outline text="Changed fontAwesomeIcon's class to fab instead of fa. So much confusion about these classes, but this seems to work where we need it to work?"></outline>
					</outline>
				</outline>
			<outline text="fontAwesomeIcon: &quot;&lt;i class=\&quot;fab fa-twitter\&quot; style=\&quot;color: #4099FF;\&quot;&gt;&lt;/i&gt;&quot;,"></outline>
			<outline text="iconColor: &quot;#4099FF&quot;,"></outline>
			<outline text="flEditChatUsePostBody: false //4/28/16 by DW"></outline>
			<outline text="}"></outline>
			</outline>
		<outline text="var twStorageData = {">
			<outline text="whenLastRatelimitError: undefined,"></outline>
			<outline text="embedCache: [], maxEmbedCache: 25, flEmbedCacheInitialized: false,"></outline>
			<outline text="urlTwitterServer: undefined,"></outline>
			<outline text="twitterConfig: undefined,"></outline>
			<outline text="pathAppPrefs: &quot;appPrefs.json&quot;,"></outline>
			<outline text="flPrefsCalendarBackup: false, //4/24/15 by DW -- if true, we keep a calendar-based archive of prefs"></outline>
			<outline text="pendingPolls: new Object (), //8/30/15 by DW"></outline>
			<outline text="embedModifyCallback: undefined //3/30/17 by DW"></outline>
			<outline text="}"></outline>
			</outline>
		<outline text=""></outline>
		<outline text="function twGetDefaultServer () { ">
			<outline text="var url = undefined;"></outline>
			<outline text="try {">
				<outline text="if (twStorageData.urlTwitterServer != undefined) {">
					<outline text="url = twStorageData.urlTwitterServer;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="catch (err) {">
				<outline text="}"></outline>
				</outline>
			<outline text="return (url);"></outline>
			<outline text="}"></outline>
			</outline>
		<outline created="Tue, 16 Apr 2013 22:17:00 GMT" pgfnum="22778" text="function twGetOauthParams (flRedirectIfParamsPresent) {">
			<outline created="Thu, 24 Apr 2014 01:03:08 GMT" isComment="true" pgfnum="40520" text="Changes">
				<outline text="7/19/17; 6:40:17 PM by DW">
					<outline text="Use window.location.replace to redirecdt, per this Stack Overflow post.">
						<outline text="https://stackoverflow.com/a/506004/459452"></outline>
						</outline>
					</outline>
				<outline created="Wed, 04 Jun 2014 12:08:46 GMT" pgfnum="41773" text="6/4/14; 8:08:46 AM by DW">
					<outline created="Wed, 04 Jun 2014 12:08:47 GMT" pgfnum="41774" text="Return flTwitterParamsPresent to the caller."></outline>
					</outline>
				<outline created="Wed, 04 Jun 2014 12:06:01 GMT" pgfnum="41771" text="6/4/14; 8:06:01 AM by DW">
					<outline created="Wed, 04 Jun 2014 12:06:02 GMT" pgfnum="41772" text="New optional param, flRedirectIfParamsPresent. If false, we don't redirect if params are present. This is needed in the stub that handles Twitter OAuth for Fargo. It just wants to quit after doing its job."></outline>
					</outline>
				<outline created="Thu, 24 Apr 2014 01:03:09 GMT" pgfnum="40521" text="4/23/14; 9:03:10 PM by DW">
					<outline created="Thu, 24 Apr 2014 01:03:11 GMT" pgfnum="40522" text="Get OAuth values for the user from the url params, copy into local storage. "></outline>
					</outline>
				</outline>
			<outline created="Tue, 11 Jun 2013 23:25:57 GMT" pgfnum="25797" text="var flTwitterParamsPresent = false;"></outline>
			<outline created="Wed, 04 Jun 2014 12:05:32 GMT" pgfnum="41766" text="if (flRedirectIfParamsPresent == undefined) { //6/4/14 by DW">
				<outline created="Wed, 04 Jun 2014 12:05:41 GMT" pgfnum="41769" text="flRedirectIfParamsPresent = true;"></outline>
				<outline created="Wed, 04 Jun 2014 12:05:46 GMT" pgfnum="41770" text="}"></outline>
				</outline>
			<outline text="function getURLParameter (name) {">
				<outline text="return (decodeURI ((RegExp(name + '=' + '(.+?)(&amp;|$)').exec(location.search)||[,null])[1]));"></outline>
				<outline created="Thu, 24 Apr 2014 00:54:02 GMT" pgfnum="40519" text="}"></outline>
				</outline>
			<outline created="Thu, 24 Apr 2014 01:03:43 GMT" pgfnum="40523" text="function getParam (paramname, objname) {">
				<outline created="Thu, 24 Apr 2014 01:04:57 GMT" pgfnum="40531" text="var val = getURLParameter (paramname);"></outline>
				<outline created="Thu, 24 Apr 2014 01:05:05 GMT" pgfnum="40532" text="if (val != &quot;null&quot;) {">
					<outline created="Thu, 24 Apr 2014 01:04:09 GMT" pgfnum="40529" text="localStorage [objname] = val;"></outline>
					<outline created="Tue, 29 Apr 2014 16:14:54 GMT" pgfnum="40646" text="flTwitterParamsPresent = true;"></outline>
					<outline created="Thu, 24 Apr 2014 01:05:12 GMT" pgfnum="40533" text="}"></outline>
					</outline>
				<outline created="Thu, 24 Apr 2014 01:03:55 GMT" pgfnum="40527" text="}"></outline>
				</outline>
			<outline created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524" text="getParam (&quot;oauth_token&quot;, &quot;twOauthToken&quot;);"></outline>
			<outline created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524" text="getParam (&quot;oauth_token_secret&quot;, &quot;twOauthTokenSecret&quot;);"></outline>
			<outline created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524" text="getParam (&quot;user_id&quot;, &quot;twUserId&quot;);"></outline>
			<outline created="Thu, 24 Apr 2014 01:03:44 GMT" pgfnum="40524" text="getParam (&quot;screen_name&quot;, &quot;twScreenName&quot;);"></outline>
			<outline created="Tue, 29 Apr 2014 16:09:03 GMT" pgfnum="40644" text=""></outline>
			<outline created="Tue, 29 Apr 2014 16:03:36 GMT" pgfnum="40636" text="//redirect if there are params on the url that invoked us -- 4/29/14 by DW">
				<outline created="Tue, 11 Jun 2013 23:26:25 GMT" pgfnum="25798" text="if (flTwitterParamsPresent &amp;&amp; flRedirectIfParamsPresent) {">
					<outline text="window.location.replace (window.location.href.substr (0, window.location.href.search (&quot;\\?&quot;))); //7/19/17 by DW"></outline>
					<outline created="Tue, 11 Jun 2013 23:26:50 GMT" isComment="true" pgfnum="25800" text="window.location.href = window.location.href.substr (0, window.location.href.search (&quot;\\?&quot;));"></outline>
					<outline created="Fri, 14 Jun 2013 15:22:33 GMT" pgfnum="26170" text="return;"></outline>
					<outline created="Tue, 11 Jun 2013 23:26:43 GMT" pgfnum="25799" text="}"></outline>
					</outline>
				</outline>
			<outline created="Wed, 04 Jun 2014 12:09:11 GMT" pgfnum="41775" text=""></outline>
			<outline created="Wed, 04 Jun 2014 12:09:11 GMT" pgfnum="41776" text="return (flTwitterParamsPresent); //6/4/14 by DW"></outline>
			<outline created="Tue, 16 Apr 2013 22:17:28 GMT" pgfnum="22779" text="}"></outline>
			</outline>
		<outline text="function twSendDisconnectMessage (callback) { //3/24/19 by DW">
			<outline isComment="true" text="Changes">
				<outline text="6/13/19; 9:40:22 AM by DW">
					<outline text="Don't call the callback if it is undefined."></outline>
					</outline>
				</outline>
			<outline text="var token = encodeURIComponent (localStorage.twOauthToken);"></outline>
			<outline text="var secret = encodeURIComponent (localStorage.twOauthTokenSecret);"></outline>
			<outline text="$.ajax ({">
				<outline text="type: &quot;GET&quot;,"></outline>
				<outline text="url: twGetDefaultServer () + &quot;disconnect&quot; + &quot;?oauth_token=&quot; + token + &quot;&amp;oauth_token_secret=&quot; + secret,"></outline>
				<outline text="success: function (data) {">
					<outline text="if (callback !== undefined) { //6/13/19 by DW">
						<outline created="Wed, 23 Apr 2014 17:17:13 GMT" pgfnum="40481" text="callback ();"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="},"></outline>
					</outline>
				<outline text="error: function (status) { ">
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twSendDisconnectMessage: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="dataType: &quot;json&quot;"></outline>
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline created="Mon, 10 Jun 2013 18:07:32 GMT" pgfnum="25623" text="function twDisconnectFromTwitter () {">
			<outline isComment="true" text="Changes">
				<outline text="3/24/19; 11:03:27 AM by DW">
					<outline text="Send a message to the server to remove references to localStorage.twScreenName from its cache. "></outline>
					</outline>
				</outline>
			<outline text="try {">
				<outline text="twSendDisconnectMessage (); //3/24/19 by DW"></outline>
				<outline text="localStorage.removeItem (&quot;twOauthToken&quot;);"></outline>
				<outline text="localStorage.removeItem (&quot;twOauthTokenSecret&quot;);"></outline>
				<outline text="localStorage.removeItem (&quot;twScreenName&quot;);"></outline>
				<outline text="localStorage.removeItem (&quot;twUserId&quot;);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="catch (err) {">
				<outline text="}"></outline>
				</outline>
			<outline created="Mon, 10 Jun 2013 18:19:49 GMT" pgfnum="25632" text="}"></outline>
			</outline>
		<outline created="Mon, 10 Jun 2013 18:07:32 GMT" pgfnum="25623" text="function twConnectToTwitter () {">
			<outline created="Wed, 23 Apr 2014 17:13:35 GMT" pgfnum="40477" text="var urlServer = twGetDefaultServer ();"></outline>
			<outline created="Mon, 11 Mar 2013 02:40:24 GMT" pgfnum="20129" text="function trimTrailing (s, ch) {">
				<outline text="while (s.charAt (s.length - 1) == ch) {">
					<outline text="s = s.substr (0, s.length - 1);"></outline>
					<outline created="Thu, 24 Apr 2014 00:51:29 GMT" pgfnum="40514" text="}"></outline>
					</outline>
				<outline created="Mon, 11 Mar 2013 02:43:18 GMT" pgfnum="20133" text="return (s);"></outline>
				<outline created="Thu, 24 Apr 2014 00:51:23 GMT" pgfnum="40513" text="}"></outline>
				</outline>
			<outline created="Thu, 13 Jun 2013 23:16:23 GMT" pgfnum="26128" text="var s = trimTrailing (window.location.href, &quot;#&quot;);"></outline>
			<outline created="Mon, 28 Apr 2014 12:43:45 GMT" pgfnum="40579" text="var urlRedirectTo = urlServer + &quot;connect?redirect_url=&quot; + encodeURIComponent (s);"></outline>
			<outline created="Mon, 28 Apr 2014 12:43:28 GMT" pgfnum="40575" text="window.location.href = urlRedirectTo;"></outline>
			<outline created="Mon, 10 Jun 2013 18:19:49 GMT" pgfnum="25632" text="}"></outline>
			</outline>
		<outline created="Thu, 13 Jun 2013 22:55:44 GMT" pgfnum="26108" text="function twIsTwitterConnected () {">
			<outline isComment="true" text="Changes">
				<outline text="2/12/16; 10:33:06 PM by DW">
					<outline text="The access to localStorage can fail if the user has cookies turned off."></outline>
					</outline>
				</outline>
			<outline text="try {">
				<outline created="Thu, 13 Jun 2013 22:56:06 GMT" pgfnum="26110" text="return (localStorage.twOauthToken != undefined);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="catch (err) {">
				<outline text="return (false);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline created="Thu, 13 Jun 2013 22:56:01 GMT" pgfnum="26109" text="}"></outline>
			</outline>
		<outline text="function twGetScreenName () {">
			<outline text="try {">
				<outline text="return (localStorage.twScreenName);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="catch (err) {">
				<outline text="return (&quot;&quot;);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline created="Thu, 10 Jul 2014 11:50:50 GMT" pgfnum="42822" text="function twCheckForRateLimitError (responseText) { //7/10/14 by DW">
			<outline created="Thu, 10 Jul 2014 11:43:19 GMT" pgfnum="42808" text="var jstruct = JSON.parse (responseText);"></outline>
			<outline created="Thu, 10 Jul 2014 11:45:03 GMT" pgfnum="42813" text="var twResponse = JSON.parse (jstruct.data);"></outline>
			<outline created="Thu, 10 Jul 2014 11:46:44 GMT" pgfnum="42814" text="if (twResponse.errors != undefined) {">
				<outline created="Thu, 10 Jul 2014 11:47:17 GMT" pgfnum="42816" text="if (twResponse.errors [0].code == 88) { //rate limit error -- raise the flag">
					<outline created="Thu, 10 Jul 2014 11:47:38 GMT" pgfnum="42818" text="whenLastTwRatelimitError = new Date ();"></outline>
					<outline created="Thu, 10 Jul 2014 11:48:37 GMT" pgfnum="42819" text="console.log (&quot;twCheckForRateLimitError: rate-limit error&quot;);"></outline>
					<outline created="Thu, 10 Jul 2014 11:47:23 GMT" pgfnum="42817" text="}"></outline>
					</outline>
				<outline created="Thu, 10 Jul 2014 11:46:58 GMT" pgfnum="42815" text="}"></outline>
				</outline>
			<outline created="Thu, 10 Jul 2014 11:55:01 GMT" pgfnum="42825" text="}"></outline>
			</outline>
		<outline created="Sat, 21 Jun 2014 14:46:11 GMT" pgfnum="42370" text="function twGetUserInfo (userScreenName, callback) { //6/21/14 by DW">
			<outline isComment="true" text="Changes">
				<outline text="10/3/15; 12:37:03 PM by DW">
					<outline text="If there's an error, call the callback with undefined as the parameter. "></outline>
					</outline>
				</outline>
			<outline created="Wed, 23 Apr 2014 17:13:35 GMT" pgfnum="40477" text="var urlServer = twGetDefaultServer ();"></outline>
			<outline created="Wed, 23 Apr 2014 17:16:42 GMT" pgfnum="40479" text="function encode (s) {">
				<outline created="Fri, 21 Jun 2013 15:07:18 GMT" pgfnum="26894" text="return (encodeURIComponent (s));"></outline>
				<outline created="Wed, 23 Apr 2014 17:16:46 GMT" pgfnum="40480" text="}"></outline>
				</outline>
			<outline text="$.ajax({">
				<outline text="type: &quot;GET&quot;,"></outline>
				<outline text="url: urlServer + &quot;getuserinfo?oauth_token=&quot; + encode (localStorage.twOauthToken) + &quot;&amp;oauth_token_secret=&quot; + encode (localStorage.twOauthTokenSecret) + &quot;&amp;screen_name=&quot; + encode (userScreenName),"></outline>
				<outline text="success: function (data) {">
					<outline created="Wed, 23 Apr 2014 17:17:13 GMT" pgfnum="40481" text="callback (data);"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="error: function (status) { ">
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twGetUserInfo: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
					<outline created="Wed, 23 Apr 2014 17:17:13 GMT" pgfnum="40481" text="callback (undefined); //10/3/15 by DW"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="dataType: &quot;json&quot;"></outline>
				<outline text="});"></outline>
				</outline>
			<outline created="Sat, 21 Jun 2014 14:46:26 GMT" pgfnum="42374" text="}"></outline>
			</outline>
		<outline created="Sat, 09 Aug 2014 15:39:08 GMT" pgfnum="43181" text="function twBuildParamList (paramtable, flPrivate) { //8/10/14 by DW">
			<outline created="Sat, 09 Aug 2014 15:39:47 GMT" pgfnum="43188" text="var s = &quot;&quot;;"></outline>
			<outline created="Sat, 09 Aug 2014 20:17:16 GMT" pgfnum="43185" text="if (flPrivate) {">
				<outline created="Sat, 09 Aug 2014 15:43:48 GMT" pgfnum="43208" text="paramtable.flprivate = &quot;true&quot;;"></outline>
				<outline created="Sat, 09 Aug 2014 20:17:19 GMT" pgfnum="43186" text="}"></outline>
				</outline>
			<outline created="Sat, 09 Aug 2014 15:39:38 GMT" pgfnum="43186" text="for (var x in paramtable) {">
				<outline created="Sat, 09 Aug 2014 15:40:02 GMT" pgfnum="43189" text="if (s.length &gt; 0) {">
					<outline created="Sat, 09 Aug 2014 15:40:08 GMT" pgfnum="43190" text="s += &quot;&amp;&quot;;"></outline>
					<outline created="Sat, 09 Aug 2014 15:40:14 GMT" pgfnum="43191" text="}"></outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 15:40:19 GMT" pgfnum="43192" text="s += x + &quot;=&quot; + encodeURIComponent (paramtable [x]);"></outline>
				<outline created="Sat, 09 Aug 2014 15:39:43 GMT" pgfnum="43187" text="}"></outline>
				</outline>
			<outline created="Sat, 09 Aug 2014 15:40:54 GMT" pgfnum="43193" text="return (s);"></outline>
			<outline created="Sat, 09 Aug 2014 15:39:35 GMT" pgfnum="43185" text="}"></outline>
			</outline>
		<outline created="Thu, 10 Jul 2014 00:26:36 GMT" pgfnum="42788" text="function twGetUserScreenName (callback) {">
			<outline text="$.ajax ({">
				<outline text="type: &quot;GET&quot;,"></outline>
				<outline text="url: twGetDefaultServer () + &quot;getmyscreenname&quot; + &quot;?oauth_token=&quot; + encodeURIComponent (localStorage.twOauthToken) + &quot;&amp;oauth_token_secret=&quot; + encodeURIComponent (localStorage.twOauthTokenSecret),"></outline>
				<outline text="success: function (data) {">
					<outline created="Thu, 10 Jul 2014 00:28:12 GMT" pgfnum="42791" text="console.log (JSON.stringify (data, undefined, 4));"></outline>
					<outline created="Wed, 23 Apr 2014 17:17:13 GMT" pgfnum="40481" text="callback (data);"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="error: function (status) { ">
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twGetUserScreenName: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="dataType: &quot;json&quot;"></outline>
				<outline text="});"></outline>
				</outline>
			<outline created="Thu, 10 Jul 2014 00:26:50 GMT" pgfnum="42789" text="}"></outline>
			</outline>
		<outline created="Fri, 21 Jun 2013 15:02:36 GMT" pgfnum="26886" text="function twGetMyTweets (userid, callback, idLastSeen) {">
			<outline created="Tue, 11 Jun 2013 01:08:30 GMT" pgfnum="25698" text="var sinceParam = &quot;&quot;, urlServer = twGetDefaultServer ();"></outline>
			<outline created="Wed, 23 Apr 2014 17:16:42 GMT" pgfnum="40479" text="function encode (s) {">
				<outline created="Fri, 21 Jun 2013 15:07:18 GMT" pgfnum="26894" text="return (encodeURIComponent (s));"></outline>
				<outline created="Wed, 23 Apr 2014 17:16:46 GMT" pgfnum="40480" text="}"></outline>
				</outline>
			<outline created="Wed, 23 Apr 2014 17:11:18 GMT" pgfnum="40466" text="if (idLastSeen != undefined) {">
				<outline created="Tue, 11 Jun 2013 01:08:38 GMT" pgfnum="25700" text="sinceParam = &quot;&amp;since_id=&quot; + idLastSeen;"></outline>
				<outline created="Wed, 23 Apr 2014 17:11:29 GMT" pgfnum="40470" text="}"></outline>
				</outline>
			<outline text="$.ajax ({">
				<outline text="type: &quot;GET&quot;,"></outline>
				<outline text="url: urlServer + &quot;getmytweets&quot; + &quot;?oauth_token=&quot; + encode (localStorage.twOauthToken) + &quot;&amp;oauth_token_secret=&quot; + encode (localStorage.twOauthTokenSecret) + &quot;&amp;user_id=&quot; + encode (userid) + sinceParam,"></outline>
				<outline text="success: function (data) {">
					<outline created="Thu, 10 Jul 2014 11:49:52 GMT" pgfnum="42821" text="whenLastTwRatelimitError = undefined; //7/10/14 by DW"></outline>
					<outline created="Wed, 23 Apr 2014 17:17:13 GMT" pgfnum="40481" text="callback (data);"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="error: function (status) { ">
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twGetMyTweets: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
					<outline created="Thu, 10 Jul 2014 11:54:21 GMT" pgfnum="42823" text="twCheckForRateLimitError (status.responseText); //7/10/14 by DW"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="dataType: &quot;json&quot;"></outline>
				<outline text="});"></outline>
				</outline>
			<outline created="Fri, 21 Jun 2013 15:02:44 GMT" pgfnum="26890" text="}"></outline>
			</outline>
		<outline created="Fri, 20 Jun 2014 18:15:01 GMT" pgfnum="42296" text="function twGetUserTweets (userid, idLastSeen, callback, urlServer) { //6/21/14 by DW">
			<outline created="Wed, 23 Apr 2014 17:24:55 GMT" pgfnum="40487" text="twGetMyTweets (userid, function (theTweets) {">
				<outline created="Wed, 12 Jun 2013 13:14:10 GMT" isComment="true" pgfnum="25848" text="console.log (&quot;twGetUserTweets: &quot; + JSON.stringify (theTweets, undefined, 4));"></outline>
				<outline created="Sat, 21 Jun 2014 15:12:02 GMT" pgfnum="42375" text="callback (theTweets);"></outline>
				<outline created="Wed, 23 Apr 2014 17:27:59 GMT" pgfnum="40492" text="}, idLastSeen);"></outline>
				</outline>
			<outline created="Sat, 21 Jun 2014 14:25:22 GMT" pgfnum="42363" text="}"></outline>
			</outline>
		<outline created="Fri, 20 Jun 2014 18:15:02 GMT" pgfnum="42298" text="function twGetEmbedCode (id, callback, maxwidth, hide_media, hide_thread, omit_script, align, related, lang) { //6/20/14 by DW">
			<outline created="Wed, 03 Sep 2014 13:28:30 GMT" isComment="true" pgfnum="43258" text="Changes">
				<outline created="Wed, 03 Sep 2014 13:28:33 GMT" pgfnum="43259" text="9/3/14; 9:28:34 AM by DW">
					<outline created="Wed, 03 Sep 2014 13:28:35 GMT" pgfnum="43260" text="On error, call the callback with the struct undefined. This is used in the community app for Radio3."></outline>
					</outline>
				</outline>
			<outline created="Fri, 20 Jun 2014 23:12:52 GMT" pgfnum="42342" text="var url, urlServer = twGetDefaultServer ();"></outline>
			<outline text="url = urlServer + &quot;getembedcode?id=&quot; + encodeURIComponent (id);"></outline>
			<outline created="Fri, 20 Jun 2014 23:12:53 GMT" pgfnum="42344" text=""></outline>
			<outline created="Fri, 20 Jun 2014 23:01:58 GMT" pgfnum="42326" text="function addParam (val, name) {">
				<outline created="Fri, 20 Jun 2014 23:02:46 GMT" pgfnum="42333" text="if (val != undefined) {">
					<outline created="Fri, 20 Jun 2014 23:03:08 GMT" pgfnum="42336" text="url += &quot;&amp;&quot; + name + &quot;=&quot; + encodeURIComponent (val);"></outline>
					<outline created="Fri, 20 Jun 2014 23:02:57 GMT" pgfnum="42335" text="}"></outline>
					</outline>
				<outline created="Fri, 20 Jun 2014 23:02:34 GMT" pgfnum="42330" text="}"></outline>
				</outline>
			<outline created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331" text="addParam (maxwidth, &quot;maxwidth&quot;);"></outline>
			<outline created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331" text="addParam (hide_media, &quot;hide_media&quot;);"></outline>
			<outline created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331" text="addParam (hide_thread, &quot;hide_thread&quot;);"></outline>
			<outline created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331" text="addParam (omit_script, &quot;omit_script&quot;);"></outline>
			<outline created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331" text="addParam (align, &quot;align&quot;);"></outline>
			<outline created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331" text="addParam (related, &quot;related&quot;);"></outline>
			<outline created="Fri, 20 Jun 2014 23:02:35 GMT" pgfnum="42331" text="addParam (lang, &quot;lang&quot;);"></outline>
			<outline created="Fri, 20 Jun 2014 23:12:53 GMT" pgfnum="42347" text=""></outline>
			<outline text="$.ajax ({">
				<outline text="type: &quot;GET&quot;,"></outline>
				<outline text="url: url,"></outline>
				<outline text="success: function (data) {">
					<outline created="Wed, 23 Apr 2014 17:17:13 GMT" pgfnum="40481" text="callback (data);"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="error: function (status) { ">
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twGetEmbedCode: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
					<outline created="Wed, 23 Apr 2014 17:17:13 GMT" pgfnum="40481" text="callback (undefined); //9/3/14 by DW"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="dataType: &quot;json&quot;"></outline>
				<outline text="});"></outline>
				</outline>
			<outline created="Fri, 20 Jun 2014 18:15:16 GMT" pgfnum="42304" text="}"></outline>
			</outline>
		<outline created="Mon, 10 Jun 2013 18:07:32 GMT" pgfnum="25622" text="function twGetTwitterReplies (userid, idLastSeen, callback) {">
			<outline isComment="true" text="Changes">
				<outline text="1/29/15; 4:38:07 PM by DW">
					<outline text="Switched the order of the params for idLastSeen and callback. "></outline>
					</outline>
				</outline>
			<outline created="Tue, 11 Jun 2013 01:08:30 GMT" pgfnum="25698" text="var sinceParam = &quot;&quot;, urlServer = twGetDefaultServer ();"></outline>
			<outline created="Wed, 23 Apr 2014 17:16:42 GMT" pgfnum="40479" text="function encode (s) {">
				<outline created="Fri, 21 Jun 2013 15:07:18 GMT" pgfnum="26894" text="return (encodeURIComponent (s));"></outline>
				<outline created="Wed, 23 Apr 2014 17:16:46 GMT" pgfnum="40480" text="}"></outline>
				</outline>
			<outline created="Wed, 12 Jun 2013 13:23:01 GMT" pgfnum="25863" text="if (idLastSeen != undefined) {">
				<outline created="Tue, 11 Jun 2013 01:08:38 GMT" pgfnum="25700" text="sinceParam = &quot;&amp;since_id=&quot; + idLastSeen;"></outline>
				<outline created="Wed, 12 Jun 2013 13:23:12 GMT" pgfnum="25864" text="}"></outline>
				</outline>
			<outline text=""></outline>
			<outline text="var apiUrl = urlServer + &quot;getmymentions?oauth_token=&quot; + encode (localStorage.twOauthToken) + &quot;&amp;oauth_token_secret=&quot; + encode (localStorage.twOauthTokenSecret) + &quot;&amp;user_id=&quot; + encode (userid) + sinceParam;"></outline>
			<outline text=""></outline>
			<outline text="console.log (&quot;twGetTwitterReplies: apiUrl == &quot; + apiUrl);"></outline>
			<outline text=""></outline>
			<outline text="$.ajax ({">
				<outline text="type: &quot;GET&quot;,"></outline>
				<outline text="url: apiUrl,"></outline>
				<outline text="success: function (data) {">
					<outline created="Wed, 23 Apr 2014 17:17:13 GMT" pgfnum="40481" text="callback (data);"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="error: function (status) { ">
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twGetTwitterReplies: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="dataType: &quot;json&quot;"></outline>
				<outline text="});"></outline>
				</outline>
			<outline created="Mon, 10 Jun 2013 18:07:45 GMT" pgfnum="25627" text="}"></outline>
			</outline>
		<outline created="Mon, 10 Jun 2013 18:07:32 GMT" pgfnum="25622" text="function twTweet (status, inReplyToId, callback) {">
			<outline created="Thu, 05 Jun 2014 13:55:32 GMT" isComment="true" pgfnum="41784" text="Changes">
				<outline text="8/2/16; 3:38:54 PM by DW">
					<outline text="The error message format seems to have changed (again?) -- changed the code accordingly."></outline>
					</outline>
				<outline text="12/16/14; 2:50:13 PM by DW">
					<outline text="It looks like the format of the struct returned by Twitter on error has changed. Now instead of an array, they return a struct? Not sure. But this effects how we call the callback on error, and the way we did it might break some? I looked at Radio3 and LCE, and they don't call this routine directly. (We don't call the callback on errors now, and we put up an alert dialog.)"></outline>
					</outline>
				<outline created="Tue, 02 Sep 2014 20:19:49 GMT" pgfnum="43234" text="9/2/14; 4:19:50 PM by DW">
					<outline created="Tue, 02 Sep 2014 20:19:50 GMT" pgfnum="43235" text="Add an error branch."></outline>
					</outline>
				<outline created="Thu, 05 Jun 2014 13:55:38 GMT" pgfnum="41785" text="6/5/14; 9:55:40 AM by DW">
					<outline created="Thu, 05 Jun 2014 13:55:41 GMT" pgfnum="41786" text="oauthToken, oauthTokenSecret and callback become optional params. "></outline>
					</outline>
				</outline>
			<outline text="var urlServer = twGetDefaultServer ();"></outline>
			<outline created="Wed, 23 Apr 2014 17:16:42 GMT" pgfnum="40479" text="function encode (s) {">
				<outline created="Fri, 21 Jun 2013 15:07:18 GMT" pgfnum="26894" text="return (encodeURIComponent (s));"></outline>
				<outline created="Wed, 23 Apr 2014 17:16:46 GMT" pgfnum="40480" text="}"></outline>
				</outline>
			<outline created="Wed, 23 Apr 2014 17:13:23 GMT" pgfnum="40473" text="if (inReplyToId == undefined) {">
				<outline created="Wed, 23 Apr 2014 17:13:35 GMT" pgfnum="40477" text="inReplyToId = 0;"></outline>
				<outline created="Wed, 23 Apr 2014 17:13:31 GMT" pgfnum="40476" text="}"></outline>
				</outline>
			<outline created="Sat, 07 Jun 2014 11:47:43 GMT" pgfnum="41789" text=""></outline>
			<outline created="Sat, 07 Jun 2014 11:47:43 GMT" pgfnum="41790" text="var apiUrl = urlServer + &quot;tweet?oauth_token=&quot; + encode (localStorage.twOauthToken) + &quot;&amp;oauth_token_secret=&quot; + encode (localStorage.twOauthTokenSecret) + &quot;&amp;status=&quot; + encode (status) + &quot;&amp;in_reply_to_status_id=&quot; + encode (inReplyToId);"></outline>
			<outline created="Sat, 07 Jun 2014 11:47:51 GMT" pgfnum="41794" text="console.log (&quot;twTweet: &quot; + apiUrl);"></outline>
			<outline created="Sat, 07 Jun 2014 11:47:44 GMT" pgfnum="41793" text=""></outline>
			<outline text="$.ajax ({">
				<outline text="type: &quot;GET&quot;,"></outline>
				<outline text="url: apiUrl,"></outline>
				<outline text="success: function (data){">
					<outline created="Sat, 01 Jun 2013 14:45:29 GMT" isComment="true" pgfnum="24939" text="console.log (&quot;twTweet: twitter response == &quot; + JSON.stringify (data, undefined, 4)); //9/3/14 by DW"></outline>
					<outline created="Thu, 05 Jun 2014 13:55:13 GMT" pgfnum="41782" text="if (callback != undefined) { //6/5/14 by DW">
						<outline created="Thu, 24 Apr 2014 12:47:03 GMT" pgfnum="40460" text="callback (data);"></outline>
						<outline created="Thu, 05 Jun 2014 13:55:20 GMT" pgfnum="41783" text="}"></outline>
						</outline>
					<outline text="},"></outline>
					</outline>
				<outline text="error: function (status) { ">
					<outline created="Tue, 02 Sep 2014 20:21:32 GMT" pgfnum="43236" text="var twitterResponse = JSON.parse (status.responseText);"></outline>
					<outline created="Tue, 02 Sep 2014 20:32:21 GMT" pgfnum="43237" text="var innerResponse = JSON.parse (twitterResponse.data);"></outline>
					<outline text="var theError = innerResponse.errors [0].message; //8/2/16 by DW"></outline>
					<outline text="console.log (&quot;twTweet: error reported by twitter == &quot; + theError);"></outline>
					<outline text="alert (&quot;Twitter reported an error: \&quot;&quot; + theError + &quot;\&quot;&quot;);"></outline>
					<outline text=""></outline>
					<outline isComment="true" text="old code -- pre-December 2014">
						<outline created="Sat, 01 Jun 2013 14:45:29 GMT" isComment="true" pgfnum="24939" text="console.log (&quot;twTweet: error, twitter response == &quot; + JSON.stringify (innerResponse.errors [0], undefined, 4));"></outline>
						<outline created="Thu, 05 Jun 2014 13:55:13 GMT" isComment="true" pgfnum="41782" text="if (callback != undefined) { //9/2/14 by DW">
							<outline created="Tue, 02 Sep 2014 20:35:18 GMT" pgfnum="43238" text="innerResponse.errors [0].flError = true; //signal to callback that it was an error"></outline>
							<outline created="Thu, 24 Apr 2014 12:47:03 GMT" pgfnum="40460" text="callback (innerResponse.errors [0]);"></outline>
							<outline created="Thu, 05 Jun 2014 13:55:20 GMT" pgfnum="41783" text="}"></outline>
							</outline>
						</outline>
					<outline text="},"></outline>
					</outline>
				<outline text="dataType: &quot;json&quot;"></outline>
				<outline text="});"></outline>
				</outline>
			<outline created="Mon, 10 Jun 2013 18:07:45 GMT" pgfnum="25627" text="}"></outline>
			</outline>
		<outline created="Fri, 08 Aug 2014 19:24:49 GMT" pgfnum="43175" text="function twGetUrlLength () { //8/8/14 by DW">
			<outline created="Tue, 15 Jul 2014 14:14:15 GMT" pgfnum="42986" text="var twUrlLength = 23;"></outline>
			<outline created="Tue, 15 Jul 2014 14:14:15 GMT" pgfnum="42987" text="if (twStorageData.twitterConfig != undefined) {">
				<outline created="Tue, 15 Jul 2014 14:14:44 GMT" pgfnum="42993" text="twUrlLength = twStorageData.twitterConfig.short_url_length_https;"></outline>
				<outline created="Tue, 15 Jul 2014 14:14:22 GMT" pgfnum="42990" text="}"></outline>
				</outline>
			<outline text="return (twUrlLength);"></outline>
			<outline created="Fri, 08 Aug 2014 19:24:58 GMT" pgfnum="43179" text="}"></outline>
			</outline>
		<outline created="Thu, 13 Jun 2013 23:03:55 GMT" pgfnum="26115" text="function twToggleConnectCommand (confirmDialogCallback) { ">
			<outline created="Thu, 13 Jun 2013 23:05:12 GMT" pgfnum="26117" text="if (twIsTwitterConnected ()) {">
				<outline text="if (confirmDialogCallback == undefined) {">
					<outline created="Mon, 28 Apr 2014 13:26:36 GMT" pgfnum="40601" text="twDisconnectFromTwitter ();"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="else {">
					<outline created="Wed, 27 Feb 2013 16:18:09 GMT" pgfnum="19236" text="confirmDialogCallback (&quot;Sign off Twitter?&quot;, function () {">
						<outline created="Mon, 28 Apr 2014 13:26:36 GMT" pgfnum="40601" text="twDisconnectFromTwitter ();"></outline>
						<outline created="Sun, 14 Apr 2013 02:15:30 GMT" pgfnum="22673" text="});"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline created="Thu, 13 Jun 2013 23:05:15 GMT" pgfnum="26118" text="}"></outline>
				</outline>
			<outline created="Thu, 13 Jun 2013 23:05:16 GMT" pgfnum="26119" text="else {">
				<outline created="Thu, 13 Jun 2013 23:05:41 GMT" pgfnum="26122" text="twConnectToTwitter ();"></outline>
				<outline created="Thu, 13 Jun 2013 23:05:19 GMT" pgfnum="26120" text="}"></outline>
				</outline>
			<outline created="Thu, 13 Jun 2013 23:03:59 GMT" pgfnum="26116" text="}"></outline>
			</outline>
		<outline created="Thu, 13 Jun 2013 23:01:54 GMT" pgfnum="26111" text="function twUpdateTwitterMenuItem (iditem) {">
			<outline text="try {">
				<outline created="Thu, 13 Jun 2013 23:02:33 GMT" pgfnum="26114" text="document.getElementById (iditem).innerHTML = (twIsTwitterConnected ()) ? &quot;Sign off Twitter...&quot; : &quot;Sign on Twitter...&quot;;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="catch (err) {">
				<outline isComment="true" text="console.log (&quot;twUpdateTwitterMenuItem: &quot; + err.message); //3/18/16 by DW"></outline>
				<outline text="}"></outline>
				</outline>
			<outline created="Thu, 13 Jun 2013 23:02:05 GMT" pgfnum="26112" text="}"></outline>
			</outline>
		<outline created="Thu, 13 Jun 2013 23:01:54 GMT" pgfnum="26111" text="function twUpdateTwitterUsername (iditem) {">
			<outline text="try {">
				<outline created="Thu, 13 Jun 2013 23:02:33 GMT" pgfnum="26114" text="document.getElementById (iditem).innerHTML = (twIsTwitterConnected ()) ? localStorage.twScreenName : &quot;Sign on here&quot;;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="catch (err) {">
				<outline isComment="true" text="console.log (&quot;twUpdateTwitterUsername: &quot; + err.message); //3/18/16 by DW"></outline>
				<outline text="}"></outline>
				</outline>
			<outline created="Thu, 13 Jun 2013 23:02:05 GMT" pgfnum="26112" text="}"></outline>
			</outline>
		<outline created="Tue, 24 Jun 2014 16:34:23 GMT" pgfnum="42440" text="function twWebIntent (id, twOp, paramName) {">
			<outline text="if (paramName === undefined) {">
				<outline text="paramName = &quot;tweet_id&quot;;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="if (id != undefined) {">
				<outline text="window.open (&quot;https://twitter.com/intent/&quot; + twOp + &quot;?&quot; + paramName + &quot;=&quot; + id, &quot;_blank&quot;, &quot;left=200,top=300,location=no,height=350,width=600,scrollbars=no,status=no&quot;);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline created="Tue, 24 Jun 2014 16:34:28 GMT" pgfnum="42441" text="}"></outline>
			</outline>
		<outline text="function twGetFile (relpath, flIncludeBody, flPrivate, callback, flNotWhitelisted) { //8/10/14 by DW">
			<outline isComment="true" text="Changes">
				<outline text="2/23/15; 11:48:52 AM by DW">
					<outline text="New optional param, flNotWhitelisted. "></outline>
					</outline>
				<outline text="8/10/14; 8:47:17 AM by DW">
					<outline text="Created. relpath must not begin with a slash. If flIncludeBody is false, we don't return the body, so you can quickly check to see if the file has changed. If flPrivate is true, the file is stored in a different place, that is not accessible publicly over the net. "></outline>
					</outline>
				</outline>
			<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
				<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="oauth_token: localStorage.twOauthToken,"></outline>
				<outline created="Sat, 09 Aug 2014 15:42:43 GMT" pgfnum="43205" text="oauth_token_secret: localStorage.twOauthTokenSecret,"></outline>
				<outline created="Sat, 09 Aug 2014 15:43:02 GMT" pgfnum="43206" text="relpath: relpath"></outline>
				<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
				</outline>
			<outline text="if (flIncludeBody) {">
				<outline text="paramtable.flIncludeBody = &quot;true&quot;;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="if (flNotWhitelisted) { //2/23/15 by DW">
				<outline text="paramtable.flNotWhitelisted = &quot;true&quot;;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var url = twGetDefaultServer () + &quot;getfile?&quot; + twBuildParamList (paramtable, flPrivate);"></outline>
			<outline text="$.ajax ({">
				<outline text="type: &quot;GET&quot;,"></outline>
				<outline text="url: url,"></outline>
				<outline text="success: function (data) {">
					<outline text="callback (undefined, data);"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="error: function (status, something, otherthing) { ">
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twGetFile: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" isComment="true" pgfnum="25848" text="console.log (&quot;twGetFile: something == &quot; + JSON.stringify (something, undefined, 4));"></outline>
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" isComment="true" pgfnum="25848" text="console.log (&quot;twGetFile: otherthing == &quot; + JSON.stringify (otherthing, undefined, 4));"></outline>
					<outline text="callback (status, undefined);"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="dataType: &quot;json&quot;"></outline>
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function twGetOptionalFile (relpath, flIncludeBody, flPrivate, callback) { //3/7/20 by DW">
			<outline isComment="true" text="Changes">
				<outline text="3/7/20; 3:21:57 PM by DW">
					<outline text="Created. A fork of twGetFile but the file doesn't have to be there. Use this to load an optional file. No error shows up in the console. I ask users to watch the console and they report these errors. All. The. Time. They shouldn't be errors, now they aren't."></outline>
					</outline>
				</outline>
			<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
				<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="oauth_token: localStorage.twOauthToken,"></outline>
				<outline created="Sat, 09 Aug 2014 15:42:43 GMT" pgfnum="43205" text="oauth_token_secret: localStorage.twOauthTokenSecret,"></outline>
				<outline created="Sat, 09 Aug 2014 15:43:02 GMT" pgfnum="43206" text="relpath: relpath"></outline>
				<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
				</outline>
			<outline text="if (flIncludeBody) {">
				<outline text="paramtable.flIncludeBody = &quot;true&quot;;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline isComment="true" text="if (flNotWhitelisted) { //2/23/15 by DW">
				<outline text="paramtable.flNotWhitelisted = &quot;true&quot;;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var url = twGetDefaultServer () + &quot;getoptionalfile?&quot; + twBuildParamList (paramtable, flPrivate);"></outline>
			<outline text="$.ajax ({">
				<outline text="type: &quot;GET&quot;,"></outline>
				<outline text="url: url,"></outline>
				<outline text="success: function (data) {">
					<outline text="callback (undefined, data);"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="error: function (status, something, otherthing) { ">
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twGetFile: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" isComment="true" pgfnum="25848" text="console.log (&quot;twGetFile: something == &quot; + JSON.stringify (something, undefined, 4));"></outline>
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" isComment="true" pgfnum="25848" text="console.log (&quot;twGetFile: otherthing == &quot; + JSON.stringify (otherthing, undefined, 4));"></outline>
					<outline text="callback (status, undefined);"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="dataType: &quot;json&quot;"></outline>
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline created="Thu, 01 May 2014 15:43:01 GMT" pgfnum="40772" text="function twUploadFile (relpath, filedata, type, flPrivate, callback, flNotWhitelisted) { //8/3/14 by DW">
			<outline created="Thu, 26 Jun 2014 11:53:02 GMT" isComment="true" pgfnum="42481" text="Changes">
				<outline text="2/23/15; 12:16:32 PM by DW">
					<outline text="New optional param, flNotWhitelisted. "></outline>
					</outline>
				<outline created="Mon, 04 Aug 2014 00:02:11 GMT" pgfnum="43118" text="8/3/14; 8:17:57 PM by DW">
					<outline text="General-purpose file uploader. relpath is relative to the user's directory on the server. type is a mimetype like text/html. If you want it to be private, pass in flPrivate as true."></outline>
					</outline>
				</outline>
			<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
				<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="oauth_token: localStorage.twOauthToken,"></outline>
				<outline created="Sat, 09 Aug 2014 15:42:43 GMT" pgfnum="43205" text="oauth_token_secret: localStorage.twOauthTokenSecret,"></outline>
				<outline created="Sat, 09 Aug 2014 15:43:02 GMT" pgfnum="43206" text="relpath: relpath,"></outline>
				<outline created="Sat, 09 Aug 2014 15:43:08 GMT" pgfnum="43207" text="type: type"></outline>
				<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
				</outline>
			<outline text="if (flNotWhitelisted) { //2/23/15 by DW">
				<outline text="paramtable.flNotWhitelisted = &quot;true&quot;;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var url = twGetDefaultServer () + &quot;publishfile?&quot; + twBuildParamList (paramtable, flPrivate);"></outline>
			<outline created="Sat, 09 Aug 2014 15:59:33 GMT" pgfnum="43210" text="$.post (url, filedata, function (data, status) {">
				<outline created="Sat, 09 Aug 2014 16:04:22 GMT" pgfnum="43217" text="if (status == &quot;success&quot;) {">
					<outline created="Sat, 09 Aug 2014 16:04:47 GMT" pgfnum="43222" text="callback (JSON.parse (data));"></outline>
					<outline created="Sat, 09 Aug 2014 16:04:38 GMT" pgfnum="43219" text="}"></outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 16:04:39 GMT" pgfnum="43220" text="else {">
					<outline created="Sat, 01 Jun 2013 14:45:29 GMT" pgfnum="24939" text="console.log (&quot;twUploadFile: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
					<outline created="Sat, 09 Aug 2014 16:04:41 GMT" pgfnum="43221" text="}"></outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 16:04:22 GMT" isComment="true" pgfnum="43218" text=""></outline>
				<outline created="Sat, 01 Jun 2013 14:45:29 GMT" isComment="true" pgfnum="24939" text="console.log (&quot;twUploadFile: data == &quot; + JSON.stringify (data, undefined, 4))"></outline>
				<outline created="Sat, 01 Jun 2013 14:45:29 GMT" isComment="true" pgfnum="24939" text="console.log (&quot;twUploadFile: status == &quot; + JSON.stringify (status, undefined, 4))"></outline>
				<outline created="Sat, 09 Aug 2014 16:00:26 GMT" pgfnum="43214" text="});"></outline>
				</outline>
			<outline created="Sat, 03 May 2014 20:43:44 GMT" pgfnum="40944" text="}"></outline>
			</outline>
		<outline created="Wed, 16 Jul 2014 11:54:36 GMT" pgfnum="43001" text="function twTwitterDateToGMT (twitterDate) { //7/16/14 by DW">
			<outline created="Wed, 16 Jul 2014 11:55:03 GMT" isComment="true" pgfnum="43005" text="Changes">
				<outline created="Wed, 16 Jul 2014 11:55:05 GMT" pgfnum="43006" text="7/16/14; 7:55:06 AM by DW">
					<outline created="Wed, 16 Jul 2014 11:55:06 GMT" pgfnum="43007" text="Twitter sends dates that are kind of net standard, but not exactly. We do the conversion."></outline>
					</outline>
				</outline>
			<outline created="Wed, 16 Jul 2014 11:55:41 GMT" pgfnum="43008" text="return (new Date (twitterDate).toGMTString ());"></outline>
			<outline created="Wed, 16 Jul 2014 11:54:52 GMT" pgfnum="43004" text="}"></outline>
			</outline>
		<outline created="Thu, 17 Jul 2014 11:29:33 GMT" pgfnum="43018" text="function twViewTweet (idTweet, idDiv, callback) { //7/18/14 by DW">
			<outline created="Fri, 20 Jun 2014 23:26:36 GMT" isComment="true" pgfnum="42353" text="Changes">
				<outline text="3/30/17; 9:42:33 AM by DW">
					<outline text="Implement a callback that allows the app to modify the returned value from Twitter. We need to be able to do this in Electric River, where Twitter returns html text that includes the following">
						<outline text="script async src=\&quot;//platform.twitter.com/widgets.js\&quot;"></outline>
						</outline>
					<outline text="The problem is that the protocol is not specified, and ER is a file:// page. So the request to Twitter fails. The callback allows ER to modify it. "></outline>
					</outline>
				<outline created="Fri, 20 Jun 2014 23:26:41 GMT" pgfnum="42356" text="6/20/14; 7:26:42 PM by DW">
					<outline created="Fri, 20 Jun 2014 23:26:43 GMT" pgfnum="42357" text="For param definitions see this Twitter doc.">
						<outline text="https://dev.twitter.com/rest/reference/get/statuses/oembed"></outline>
						</outline>
					</outline>
				</outline>
			<outline text="function prefsToStorage () {">
				<outline text="localStorage.twEmbedCache = JSON.stringify (twStorageData.embedCache, undefined, 4);"></outline>
				<outline isComment="true" text="console.log (&quot;twViewTweet.prefsToStorage: &quot; + localStorage.twEmbedCache.length + &quot; chars.&quot;);"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="function storageToPrefs () {">
				<outline text="if (localStorage.twEmbedCache != undefined) {">
					<outline text="twStorageData.embedCache = JSON.parse (localStorage.twEmbedCache);"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="var idViewer = &quot;#&quot; + idDiv, now = new Date ();"></outline>
			<outline text=""></outline>
			<outline text="if (!twStorageData.flEmbedCacheInitialized) {">
				<outline text="storageToPrefs ();"></outline>
				<outline text="twStorageData.flEmbedCacheInitialized = true;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text=""></outline>
			<outline created="Fri, 20 Jun 2014 18:37:12 GMT" pgfnum="42321" text="if (idTweet == undefined) {">
				<outline created="Wed, 03 Apr 2013 16:41:18 GMT" pgfnum="1226" text="$(idViewer).html (&quot;&quot;);"></outline>
				<outline created="Fri, 20 Jun 2014 18:37:18 GMT" pgfnum="42322" text="}"></outline>
				</outline>
			<outline created="Fri, 20 Jun 2014 18:37:47 GMT" pgfnum="42323" text="else {">
				<outline text="var cacheElement, flFoundInCache = false;"></outline>
				<outline text="for (var i = 0; i &lt; twStorageData.embedCache.length; i++) {">
					<outline text="var c = twStorageData.embedCache [i];"></outline>
					<outline text="if (c.id == idTweet) {">
						<outline text="cacheElement = c;"></outline>
						<outline text="flFoundInCache = true;"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline text="if (flFoundInCache) {">
					<outline created="Wed, 03 Apr 2013 16:41:18 GMT" pgfnum="1226" text="$(idViewer).html (cacheElement.html);"></outline>
					<outline text="cacheElement.ctAccesses++;"></outline>
					<outline text="cacheElement.whenLastAccess = now;"></outline>
					<outline text="if (callback != undefined) { //10/4/14 by DW">
						<outline text="callback (cacheElement);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="prefsToStorage ();"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="else {">
					<outline created="Fri, 20 Jun 2014 18:30:17 GMT" pgfnum="42312" text="twGetEmbedCode (idTweet, function (struct) {">
						<outline text="if (twStorageData.embedModifyCallback !== undefined) { //3/30/17 by DW">
							<outline text="twStorageData.embedModifyCallback (struct);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="$(idViewer).css (&quot;visibility&quot;, &quot;hidden&quot;);"></outline>
						<outline created="Wed, 03 Apr 2013 16:41:18 GMT" pgfnum="1226" text="$(idViewer).html (struct.html);"></outline>
						<outline text=""></outline>
						<outline text="var obj = {">
							<outline text="html: struct.html,"></outline>
							<outline text="id: idTweet,"></outline>
							<outline text="ctAccesses: 0,"></outline>
							<outline text="whenLastAccess: now"></outline>
							<outline text="};"></outline>
							</outline>
						<outline text="if (twStorageData.embedCache.length &lt; twStorageData.maxEmbedCache) {">
							<outline text="twStorageData.embedCache [twStorageData.embedCache.length] = obj;"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="else {">
							<outline text="var whenOldest = twStorageData.embedCache [0].whenLastAccess, ixOldest = 0;"></outline>
							<outline text="for (var i = 1; i &lt; twStorageData.embedCache.length; i++) {">
								<outline text="if (twStorageData.embedCache [i].whenLastAccess &lt; whenOldest) {">
									<outline text="whenOldest = twStorageData.embedCache [i].whenLastAccess;"></outline>
									<outline text="ixOldest = i;"></outline>
									<outline text="}"></outline>
									</outline>
								<outline text="}"></outline>
								</outline>
							<outline text="twStorageData.embedCache [ixOldest] = obj;"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text=""></outline>
						<outline text="if (callback != undefined) {">
							<outline text="callback (struct);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text=""></outline>
						<outline text="prefsToStorage ();"></outline>
						<outline created="Fri, 20 Jun 2014 18:31:03 GMT" pgfnum="42313" text="});"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline created="Fri, 20 Jun 2014 18:37:50 GMT" pgfnum="42324" text="}"></outline>
				</outline>
			<outline text=""></outline>
			<outline text="$(idViewer).on (&quot;load&quot;, function () {">
				<outline text="$(idViewer).css (&quot;visibility&quot;, &quot;visible&quot;);"></outline>
				<outline text="});"></outline>
				</outline>
			<outline created="Thu, 17 Jul 2014 11:29:48 GMT" pgfnum="43021" text="}"></outline>
			</outline>
		<outline created="Sun, 04 May 2014 21:16:35 GMT" pgfnum="41024" text="function twDerefUrl (shorturl, callback) { //7/31/14 by DW">
			<outline created="Mon, 30 Jun 2014 15:25:29 GMT" pgfnum="42616" text="if (twIsTwitterConnected ()) {">
				<outline text="$.ajax ({">
					<outline text="type: &quot;GET&quot;,"></outline>
					<outline text="url: twGetDefaultServer () + &quot;derefurl?oauth_token=&quot; + encodeURIComponent (localStorage.twOauthToken) + &quot;&amp;oauth_token_secret=&quot; + encodeURIComponent (localStorage.twOauthTokenSecret) + &quot;&amp;url=&quot; + encodeURIComponent (shorturl),"></outline>
					<outline text="success: function (data) {">
						<outline text="if (callback != undefined) {">
							<outline text="callback (data.longurl);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline created="Sat, 01 Jun 2013 14:45:29 GMT" pgfnum="24939" text="console.log (&quot;twDerefUrl: data == &quot; + JSON.stringify (data, undefined, 4));"></outline>
						<outline text="},"></outline>
						</outline>
					<outline text="error: function (status) { ">
						<outline created="Sat, 01 Jun 2013 14:45:29 GMT" pgfnum="24939" text="console.log (&quot;twDerefUrl: error status == &quot; + JSON.stringify (status, undefined, 4));"></outline>
						<outline text="},"></outline>
						</outline>
					<outline text="dataType: &quot;json&quot;"></outline>
					<outline text="});"></outline>
					</outline>
				<outline created="Mon, 30 Jun 2014 15:25:32 GMT" pgfnum="42617" text="}"></outline>
				</outline>
			<outline created="Tue, 06 May 2014 20:10:06 GMT" pgfnum="41205" text="}"></outline>
			</outline>
		<outline text="function twShortenUrl (longUrl, callback) { //8/25/14 by DW">
			<outline text="$.ajax ({">
				<outline text="type: &quot;GET&quot;,"></outline>
				<outline text="url: twGetDefaultServer () + &quot;shortenurl&quot; + &quot;?url=&quot; + encodeURIComponent (longUrl),"></outline>
				<outline text="success: function (data) {">
					<outline text="if (callback != undefined) {">
						<outline created="Wed, 23 Apr 2014 17:17:13 GMT" pgfnum="40481" text="callback (data.shortUrl);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="},"></outline>
					</outline>
				<outline text="error: function (status) { ">
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twShortenUrl: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="dataType: &quot;json&quot;"></outline>
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function twGetUserFiles (flPrivate, callback) { //12/21/14 by DW -- get a list of the user's files">
			<outline text="if (flPrivate == undefined) {">
				<outline text="flPrivate = false;"></outline>
				<outline text="}"></outline>
				</outline>
			<outline text="$.ajax ({">
				<outline text="type: &quot;GET&quot;,"></outline>
				<outline text="url: twGetDefaultServer () + &quot;getfilelist?oauth_token=&quot; + encodeURIComponent (localStorage.twOauthToken) + &quot;&amp;oauth_token_secret=&quot; + encodeURIComponent (localStorage.twOauthTokenSecret) + &quot;&amp;flprivate=&quot; + encodeURIComponent (flPrivate),"></outline>
				<outline text="success: function (data) {">
					<outline created="Thu, 10 Jul 2014 11:49:52 GMT" pgfnum="42821" text="whenLastTwRatelimitError = undefined; "></outline>
					<outline isComment="true" text="console.log (&quot;twGetUserFiles: list == &quot; + JSON.stringify (data, undefined, 4));"></outline>
					<outline text="if (callback != undefined) {">
						<outline created="Wed, 23 Apr 2014 17:17:13 GMT" pgfnum="40481" text="callback (data);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="},"></outline>
					</outline>
				<outline text="error: function (status) { ">
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twGetUserFiles: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
					<outline created="Thu, 10 Jul 2014 11:54:21 GMT" pgfnum="42823" text="twCheckForRateLimitError (status.responseText); "></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="dataType: &quot;json&quot;"></outline>
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function twDownloadUserFiles (callback) { //4/14/20 by DW -- get a zip file containing the user's files">
			<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
				<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="oauth_token: localStorage.twOauthToken,"></outline>
				<outline created="Sat, 09 Aug 2014 15:42:43 GMT" pgfnum="43205" text="oauth_token_secret: localStorage.twOauthTokenSecret"></outline>
				<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
				</outline>
			<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var url = twGetDefaultServer () + &quot;myfiles?&quot; + twBuildParamList (paramtable);"></outline>
			<outline text="$.ajax ({">
				<outline text="type: &quot;GET&quot;,"></outline>
				<outline text="url: url,"></outline>
				<outline text="success: function (data) {">
					<outline text="callback (undefined, data);"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="error: function (status, something, otherthing) { ">
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twDownloadUserFiles: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
					<outline text="callback (status, undefined);"></outline>
					<outline text="}"></outline>
					</outline>
				<outline isComment="true" text="dataType: &quot;json&quot;"></outline>
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function twAddComment (snAuthor, idPost, urlOpmlFile, callback) { //2/21/15 by DW">
			<outline isComment="true" text="Changes">
				<outline text="2/21/15; 11:30:47 AM by DW">
					<outline text="Created. "></outline>
					</outline>
				</outline>
			<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
				<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="oauth_token: localStorage.twOauthToken,"></outline>
				<outline created="Sat, 09 Aug 2014 15:42:43 GMT" pgfnum="43205" text="oauth_token_secret: localStorage.twOauthTokenSecret,"></outline>
				<outline created="Sat, 09 Aug 2014 15:43:02 GMT" pgfnum="43206" text="author: snAuthor,"></outline>
				<outline created="Sat, 09 Aug 2014 15:43:02 GMT" pgfnum="43206" text="idpost: idPost,"></outline>
				<outline created="Sat, 09 Aug 2014 15:43:02 GMT" pgfnum="43206" text="urlopmlfile: urlOpmlFile"></outline>
				<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
				</outline>
			<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var url = twGetDefaultServer () + &quot;addcomment?&quot; + twBuildParamList (paramtable);"></outline>
			<outline text="$.ajax ({">
				<outline text="type: &quot;GET&quot;,"></outline>
				<outline text="url: url,"></outline>
				<outline text="success: function (data) {">
					<outline text="if (callback != undefined) {">
						<outline text="callback (data);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="},"></outline>
					</outline>
				<outline text="error: function (status, something, otherthing) { ">
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twAddComment: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
					<outline text="if (callback != undefined) {">
						<outline text="callback (undefined);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="},"></outline>
					</outline>
				<outline text="dataType: &quot;json&quot;"></outline>
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function twGetComments (snAuthor, idPost, callback) {">
			<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
				<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="oauth_token: localStorage.twOauthToken,"></outline>
				<outline created="Sat, 09 Aug 2014 15:42:43 GMT" pgfnum="43205" text="oauth_token_secret: localStorage.twOauthTokenSecret,"></outline>
				<outline created="Sat, 09 Aug 2014 15:43:02 GMT" pgfnum="43206" text="author: snAuthor,"></outline>
				<outline created="Sat, 09 Aug 2014 15:43:02 GMT" pgfnum="43206" text="idpost: idPost"></outline>
				<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
				</outline>
			<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var url = twGetDefaultServer () + &quot;getcomments?&quot; + twBuildParamList (paramtable);"></outline>
			<outline text="$.ajax ({">
				<outline text="type: &quot;GET&quot;,"></outline>
				<outline text="url: url,"></outline>
				<outline text="success: function (data) {">
					<outline text="if (callback != undefined) {">
						<outline text="callback (data);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="},"></outline>
					</outline>
				<outline text="error: function (error) { ">
					<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twGetComments: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
					<outline text="if (callback != undefined) {">
						<outline text="callback (undefined);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="},"></outline>
					</outline>
				<outline text="dataType: &quot;json&quot;"></outline>
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline text="//support for chat -- 10/15/15 by DW">
			<outline text="function twWatchForChange (urlToWatch, callback) {">
				<outline isComment="true" text="Changes">
					<outline text="12/18/14; 9:51:30 AM by DW">
						<outline text="Updated to support new protocol. Updates begin with the word &quot;update&quot; followed by a \r followed by the text of the OPML file. We pass the opml text to the callback, so it doesn't have to do a separate read of the file. "></outline>
						</outline>
					</outline>
				<outline text="var now = new Date ();"></outline>
				<outline text="for (var x in twStorageData.pendingPolls) {">
					<outline text="if (twStorageData.pendingPolls [x] &lt; now) {">
						<outline text="console.log (&quot;There's an expired item in twStorageData.pendingPolls: &quot; + x + &quot; == &quot; + twStorageData.pendingPolls [x]);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline text="if (twStorageData.pendingPolls [urlToWatch] == undefined) {">
					<outline text="var url = twGetDefaultServer () + &quot;returnwhenready?url=&quot; + urlEncode (urlToWatch);"></outline>
					<outline text="var ctSecondsTimeout = 75;"></outline>
					<outline text="var whenExpires = new Date (Number (now) + (ctSecondsTimeout * 1000)); "></outline>
					<outline text="twStorageData.pendingPolls [urlToWatch] = whenExpires;"></outline>
					<outline text="console.log (&quot;twWatchForChange: starting a new longpoll request.&quot;);"></outline>
					<outline text="readHttpFile (url, function (s) {">
						<outline isComment="true" text="console.log (&quot;twWatchForChange: the longpoll call returned.&quot;);"></outline>
						<outline text="delete twStorageData.pendingPolls [urlToWatch];"></outline>
						<outline text="if (s !== undefined) { //no error">
							<outline text="var updatekey = &quot;update\r&quot;;"></outline>
							<outline text="console.log (&quot;twWatchForChange: &quot; + stringNthField (s, &quot;\r&quot;, 1) + &quot; after &quot; + secondsSince (now) + &quot; secs.&quot;);"></outline>
							<outline text="if (beginsWith (s, updatekey)) { //it's an update -- 12/18/14 by DW">
								<outline text="s = stringDelete (s, 1, updatekey.length);"></outline>
								<outline text="if (callback != undefined) {">
									<outline text="callback (s);"></outline>
									<outline text="}"></outline>
									</outline>
								<outline text="}"></outline>
								</outline>
							<outline text="}"></outline>
							</outline>
						<outline text="}, ctSecondsTimeout * 1000);"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="function twWatchChatLog (nameChatLog, callback) { //10/26/15 by DW">
				<outline text="twWatchForChange (&quot;chatlog:&quot; + nameChatLog, function (s) {">
					<outline text="console.log (&quot;twWatchChatLog: nameChatLog == &quot; + nameChatLog);"></outline>
					<outline text="if (callback !== undefined) {">
						<outline text="callback (s);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="});"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="function twPostChatMessage (s, payload, idMsgReplyingTo, nameChatLog, callback) { //8/30/15 by DW">
				<outline isComment="true" text="Changes">
					<outline text="4/28/16; 5:57:08 PM by DW">
						<outline text="If twStorageConsts.flEditChatUsePostBody is true, instead of passing the values via the URL, we send them in the body of the POST.">
							<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var url = twGetDefaultServer () + &quot;editchatmessage?&quot; + twBuildParamList (paramtable);"></outline>
							</outline>
						</outline>
					<outline text="9/11/15; 6:29:49 PM by DW">
						<outline text="New optional param, payload. It's an arbitrary object, can be any type, that goes with the message where ever it goes. "></outline>
						</outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
					<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="oauth_token: localStorage.twOauthToken,"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:43 GMT" pgfnum="43205" text="oauth_token_secret: localStorage.twOauthTokenSecret,"></outline>
					<outline text="chatLog: nameChatLog, //10/26/15 by DW"></outline>
					<outline text="flNotWhitelisted: false,"></outline>
					<outline created="Sat, 09 Aug 2014 15:43:02 GMT" pgfnum="43206" text="text: s"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
					</outline>
				<outline text="if (payload !== undefined) {">
					<outline text="paramtable.payload = jsonStringify (payload);"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="if (idMsgReplyingTo !== undefined) {">
					<outline text="paramtable.idMsgReplyingTo = idMsgReplyingTo;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text=""></outline>
				<outline text="var encodedparams = twBuildParamList (paramtable), postbody;"></outline>
				<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var url = twGetDefaultServer () + &quot;chat&quot;;"></outline>
				<outline text=""></outline>
				<outline text="if (twStorageConsts.flEditChatUsePostBody) { //4/28/16 by DW">
					<outline text="postbody = encodedparams;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="else {">
					<outline text="url += &quot;?&quot; + encodedparams;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text=""></outline>
				<outline text="$.ajax ({">
					<outline text="type: &quot;POST&quot;,"></outline>
					<outline text="url: url,"></outline>
					<outline text="data: postbody, //4/28/16 by DW"></outline>
					<outline text="success: function (data) {">
						<outline text="if (callback != undefined) {">
							<outline text="callback (undefined, data);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="},"></outline>
						</outline>
					<outline text="error: function (status, something, otherthing) { ">
						<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twPostChatMessage: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
						<outline text="if (callback != undefined) {">
							<outline text="var err = {">
								<outline text="code: status.status,"></outline>
								<outline text="message: JSON.parse (status.responseText).message"></outline>
								<outline text="};"></outline>
								</outline>
							<outline text="callback (err, undefined);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="},"></outline>
						</outline>
					<outline text="dataType: &quot;json&quot;"></outline>
					<outline text="});"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="function twEditChatMessage (s, payload, id, nameChatLog, callback) {">
				<outline isComment="true" text="Changes">
					<outline text="4/28/16; 11:57:51 AM by DW">
						<outline text="If twStorageConsts.flEditChatUsePostBody is true, instead of passing the values via the URL, we send them in the body of the POST.">
							<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var url = twGetDefaultServer () + &quot;editchatmessage?&quot; + twBuildParamList (paramtable);"></outline>
							</outline>
						</outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
					<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="oauth_token: localStorage.twOauthToken,"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:43 GMT" pgfnum="43205" text="oauth_token_secret: localStorage.twOauthTokenSecret,"></outline>
					<outline text="chatLog: nameChatLog, //10/26/15 by DW"></outline>
					<outline text="flNotWhitelisted: false,"></outline>
					<outline created="Sat, 09 Aug 2014 15:43:02 GMT" pgfnum="43206" text="text: s,"></outline>
					<outline text="id: id"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
					</outline>
				<outline text="if (payload !== undefined) {">
					<outline text="paramtable.payload = jsonStringify (payload);"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text=""></outline>
				<outline text="var encodedparams = twBuildParamList (paramtable), postbody;"></outline>
				<outline text="var url = twGetDefaultServer () + &quot;editchatmessage&quot;; "></outline>
				<outline text="if (twStorageConsts.flEditChatUsePostBody) { //4/28/16 by DW">
					<outline text="postbody = encodedparams;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="else {">
					<outline text="url += &quot;?&quot; + encodedparams;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="console.log (&quot;twEditChatMessage: url == &quot; + url); //11/23/15 by DW"></outline>
				<outline text="$.ajax ({">
					<outline text="type: &quot;POST&quot;,"></outline>
					<outline text="data: postbody, //4/28/16 by DW"></outline>
					<outline text="url: url,"></outline>
					<outline text="success: function (data) {">
						<outline text="if (callback != undefined) {">
							<outline text="callback (undefined, data);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="},"></outline>
						</outline>
					<outline text="error: function (status, something, otherthing) { ">
						<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twEditChatMessage: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
						<outline text="if (callback != undefined) {">
							<outline text="var err = {">
								<outline text="code: status.status,"></outline>
								<outline text="message: JSON.parse (status.responseText).message"></outline>
								<outline text="};"></outline>
								</outline>
							<outline text="callback (err, undefined);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="},"></outline>
						</outline>
					<outline text="dataType: &quot;json&quot;"></outline>
					<outline text="});"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="function twGetChatLog (nameChatLog, callback) { //8/30/15 by DW">
				<outline isComment="true" text="Changes">
					<outline text="10/22/15; 2:02:17 PM by DW">
						<outline text="Modified to support the new format, now includes metadata."></outline>
						</outline>
					</outline>
				<outline text="var apiUrl = twGetDefaultServer () + &quot;chatlog?chatLog=&quot; + encodeURIComponent (nameChatLog), whenstart = new Date ();"></outline>
				<outline text="readHttpFile (apiUrl, function (data) {">
					<outline text="var jstruct = JSON.parse (data);"></outline>
					<outline text="console.log (&quot;twGetChatLog: length == &quot; + jstruct.chatLog.length);"></outline>
					<outline text="console.log (&quot;twGetChatLog: metadata == &quot; + JSON.stringify (jstruct.metadata, undefined, 4));"></outline>
					<outline text="callback (jstruct.chatLog, jstruct.metadata); //new metadata parameter -- 10/23/15 by DW"></outline>
					<outline text="});"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="function twSetChatLogMetadata (metadata, callback) { //2/19/16 by DW">
				<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
					<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="oauth_token: localStorage.twOauthToken,"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:43 GMT" pgfnum="43205" text="oauth_token_secret: localStorage.twOauthTokenSecret,"></outline>
					<outline text="metadata: jsonStringify (metadata)"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var url = twGetDefaultServer () + &quot;setchatlogmetadata?&quot; + twBuildParamList (paramtable);"></outline>
				<outline text="$.ajax ({">
					<outline text="type: &quot;POST&quot;,"></outline>
					<outline text="url: url,"></outline>
					<outline text="success: function (data) {">
						<outline text="if (callback !== undefined) {">
							<outline text="callback (undefined, data);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="},"></outline>
						</outline>
					<outline text="error: function (status, something, otherthing) { ">
						<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twSetChatLogMetadata: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
						<outline text="if (callback != undefined) {">
							<outline text="var err = {">
								<outline text="code: status.status,"></outline>
								<outline text="message: JSON.parse (status.responseText).message"></outline>
								<outline text="};"></outline>
								</outline>
							<outline text="callback (err, undefined);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="},"></outline>
						</outline>
					<outline text="dataType: &quot;json&quot;"></outline>
					<outline text="});"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="function twGetMoreChatLog (nameChatLog, idOldestPost, ctPosts, callback) { //12/31/15 by DW">
				<outline isComment="true" text="Changes">
					<outline text="12/31/15; 11:52:03 AM by DW">
						<outline isComment="true" text="http://node2.1999.io:5357/morechatlog?chatLog=scripting&amp;idOldestPost=741&amp;ctPosts=2"></outline>
						</outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
					<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="chatLog: nameChatLog,"></outline>
					<outline text="idOldestPost: idOldestPost,"></outline>
					<outline text="ctPosts: ctPosts"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
					</outline>
				<outline text="var apiUrl = twGetDefaultServer () + &quot;morechatlog?&quot; + twBuildParamList (paramtable), whenstart = new Date ();"></outline>
				<outline text="readHttpFile (apiUrl, function (data) {">
					<outline text="var jstruct = JSON.parse (data);"></outline>
					<outline text="console.log (&quot;twGetMoreChatLog: length == &quot; + jstruct.length);"></outline>
					<outline text="callback (jstruct); "></outline>
					<outline text="});"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="function twGetChatLogIndex (nameChatLog, callback) { //1/2/16 by DW">
				<outline isComment="true" text="Changes">
					<outline text="1/2/16; 12:59:45 PM by DW">
						<outline isComment="true" text="http://node2.1999.io:5357/chatlogindex?chatLog=scripting"></outline>
						</outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
					<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="chatLog: nameChatLog"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
					</outline>
				<outline text="var apiUrl = twGetDefaultServer () + &quot;chatlogindex?&quot; + twBuildParamList (paramtable), whenstart = new Date ();"></outline>
				<outline text="readHttpFile (apiUrl, function (data) {">
					<outline text="var jstruct = JSON.parse (data);"></outline>
					<outline text="console.log (&quot;twGetChatLogIndex: length == &quot; + jstruct.length);"></outline>
					<outline text="callback (jstruct); "></outline>
					<outline text="});"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="function twOpenUserChatLog (callback) { //1/5/16 by DW">
				<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
					<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="oauth_token: localStorage.twOauthToken,"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:43 GMT" pgfnum="43205" text="oauth_token_secret: localStorage.twOauthTokenSecret"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var apiUrl = twGetDefaultServer () + &quot;openuserchatlog?&quot; + twBuildParamList (paramtable);"></outline>
				<outline text="console.log (&quot;twOpenUserChatLog: apiUrl == &quot; + apiUrl); "></outline>
				<outline text="readHttpFile (apiUrl, function (data) {">
					<outline text="var jstruct = JSON.parse (data);"></outline>
					<outline text="console.log (&quot;twOpenUserChatLog: &quot; + jsonStringify (jstruct));"></outline>
					<outline text="callback (jstruct); "></outline>
					<outline text="});"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="function twOpenNamedChatLog (nameChatLog, callback) { //1/6/16 by DW">
				<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
					<outline text="chatLog: nameChatLog"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var apiUrl = twGetDefaultServer () + &quot;opennamedchatlog?&quot; + twBuildParamList (paramtable);"></outline>
				<outline text="console.log (&quot;twOpenNamedChatLog: apiUrl == &quot; + apiUrl); "></outline>
				<outline text="readHttpFile (apiUrl, function (data) {">
					<outline text="var jstruct = JSON.parse (data);"></outline>
					<outline text="console.log (&quot;twOpenNamedChatLog: &quot; + jsonStringify (jstruct));"></outline>
					<outline text="callback (jstruct); "></outline>
					<outline text="});"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline created="Thu, 01 May 2014 15:43:01 GMT" pgfnum="40772" text="function twChatLogPublish (nameChatLog, relpath, filedata, type, callback) { //1/6/16 by DW -- special for publishing from a chatlog">
				<outline created="Thu, 26 Jun 2014 11:53:02 GMT" isComment="true" pgfnum="42481" text="Changes">
					<outline created="Mon, 04 Aug 2014 00:02:11 GMT" pgfnum="43118" text="1/6/16; 1:50:46 PM by DW">
						<outline text="Special-purpose file uploader for chatlogs. If it's a V1 chatlog, we use the S3 path it's configured for to save the file. If it's a later-version chatlog, we use the same publish function as twUploadFile. This is only for public files. "></outline>
						</outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
					<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="oauth_token: localStorage.twOauthToken,"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:43 GMT" pgfnum="43205" text="oauth_token_secret: localStorage.twOauthTokenSecret,"></outline>
					<outline created="Sat, 09 Aug 2014 15:43:02 GMT" pgfnum="43206" text="relpath: relpath,"></outline>
					<outline created="Sat, 09 Aug 2014 15:43:08 GMT" pgfnum="43207" text="type: type,"></outline>
					<outline text="chatLog: nameChatLog"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var url = twGetDefaultServer () + &quot;publishchatlogfile?&quot; + twBuildParamList (paramtable);"></outline>
				<outline created="Sat, 09 Aug 2014 15:59:33 GMT" pgfnum="43210" text="$.post (url, filedata, function (data, status) {">
					<outline created="Sat, 09 Aug 2014 16:04:22 GMT" pgfnum="43217" text="if (status == &quot;success&quot;) {">
						<outline created="Sat, 09 Aug 2014 16:04:47 GMT" pgfnum="43222" text="callback (JSON.parse (data));"></outline>
						<outline created="Sat, 09 Aug 2014 16:04:38 GMT" pgfnum="43219" text="}"></outline>
						</outline>
					<outline created="Sat, 09 Aug 2014 16:04:39 GMT" pgfnum="43220" text="else {">
						<outline created="Sat, 01 Jun 2013 14:45:29 GMT" pgfnum="24939" text="console.log (&quot;twChatLogPublish: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
						<outline created="Sat, 09 Aug 2014 16:04:41 GMT" pgfnum="43221" text="}"></outline>
						</outline>
					<outline created="Sat, 09 Aug 2014 16:00:26 GMT" pgfnum="43214" text="});"></outline>
					</outline>
				<outline created="Sat, 03 May 2014 20:43:44 GMT" pgfnum="40944" text="}"></outline>
				</outline>
			<outline created="Thu, 01 May 2014 15:43:01 GMT" pgfnum="40772" text="function twPublishChatLogHomePage (nameChatLog, htmltext, callback) { //3/3/16 by DW">
				<outline created="Thu, 26 Jun 2014 11:53:02 GMT" isComment="true" pgfnum="42481" text="Changes">
					<outline created="Mon, 04 Aug 2014 00:02:11 GMT" pgfnum="43118" text="1/6/16; 1:50:46 PM by DW">
						<outline text="Special-purpose file uploader for chatlogs. If it's a V1 chatlog, we use the S3 path it's configured for to save the file. If it's a later-version chatlog, we use the same publish function as twUploadFile. This is only for public files. "></outline>
						</outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
					<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="oauth_token: localStorage.twOauthToken,"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:43 GMT" pgfnum="43205" text="oauth_token_secret: localStorage.twOauthTokenSecret,"></outline>
					<outline text="chatLog: nameChatLog"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var url = twGetDefaultServer () + &quot;publishchatloghomepage?&quot; + twBuildParamList (paramtable);"></outline>
				<outline created="Sat, 09 Aug 2014 15:59:33 GMT" pgfnum="43210" text="$.post (url, htmltext, function (data, status) {">
					<outline created="Sat, 09 Aug 2014 16:04:22 GMT" pgfnum="43217" text="if (status == &quot;success&quot;) {">
						<outline created="Sat, 09 Aug 2014 16:04:47 GMT" pgfnum="43222" text="callback (JSON.parse (data));"></outline>
						<outline created="Sat, 09 Aug 2014 16:04:38 GMT" pgfnum="43219" text="}"></outline>
						</outline>
					<outline created="Sat, 09 Aug 2014 16:04:39 GMT" pgfnum="43220" text="else {">
						<outline created="Sat, 01 Jun 2013 14:45:29 GMT" pgfnum="24939" text="console.log (&quot;twPublishChatLogHomePage: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
						<outline created="Sat, 09 Aug 2014 16:04:41 GMT" pgfnum="43221" text="}"></outline>
						</outline>
					<outline created="Sat, 09 Aug 2014 16:00:26 GMT" pgfnum="43214" text="});"></outline>
					</outline>
				<outline created="Sat, 03 May 2014 20:43:44 GMT" pgfnum="40944" text="}"></outline>
				</outline>
			<outline text="function twGetChatLogList (callback) { //10/29/15 by DW">
				<outline text="readHttpFile (twGetDefaultServer () + &quot;chatloglist&quot;, function (data) {">
					<outline text="var jstruct = JSON.parse (data);"></outline>
					<outline isComment="true" text="console.log (&quot;twGetChatLogList: &quot; + JSON.stringify (jstruct, undefined, 4));"></outline>
					<outline text="callback (jstruct); "></outline>
					<outline text="});"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="function twGetChatMessage (id, nameChatLog, callback) { //9/20/15 by DW">
				<outline isComment="true" text="Changes">
					<outline text="11/20/15; 10:24:34 AM by DW">
						<outline text="If readHttpFile returns undefined, don't try to parse it as JSON, just return undefined."></outline>
						</outline>
					</outline>
				<outline text="var apiUrl = twGetDefaultServer () + &quot;getchatmessage?id=&quot; + id + &quot;&amp;chatLog=&quot; + encodeURIComponent (nameChatLog), whenstart = new Date ();"></outline>
				<outline text="readHttpFile (apiUrl, function (data) {">
					<outline text="if (data === undefined) { //error -- 11/20/15 by DW">
						<outline text="console.log (&quot;twGetChatMessage: error reading HTTP file.&quot;);"></outline>
						<outline text="callback (undefined);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="else {">
						<outline text="var msgdata = JSON.parse (data);"></outline>
						<outline text="console.log (&quot;twGetChatMessage: &quot; + secondsSince (whenstart) + &quot; secs.&quot;);"></outline>
						<outline text="callback (msgdata.item);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="});"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text=""></outline>
			<outline text=""></outline>
			<outline text="function twGetMonthChatMessages (theMonth, nameChatLog, callback) { //5/31/16 by DW">
				<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
					<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="oauth_token: localStorage.twOauthToken,"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:43 GMT" pgfnum="43205" text="oauth_token_secret: localStorage.twOauthTokenSecret,"></outline>
					<outline text="monthnum: theMonth.getMonth (),"></outline>
					<outline text="yearnum: theMonth.getFullYear (),"></outline>
					<outline text="chatLog: nameChatLog"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var url = twGetDefaultServer () + &quot;getmonthchatmessages?&quot; + twBuildParamList (paramtable);"></outline>
				<outline text="$.ajax ({">
					<outline text="type: &quot;GET&quot;,"></outline>
					<outline text="url: url,"></outline>
					<outline text="success: function (data) {">
						<outline text="if (callback != undefined) {">
							<outline text="callback (undefined, data);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="},"></outline>
						</outline>
					<outline text="error: function (status, something, otherthing) { ">
						<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twGetMonthChatMessages: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
						<outline text="if (callback != undefined) {">
							<outline text="var err = {">
								<outline text="code: status.status,"></outline>
								<outline text="message: JSON.parse (status.responseText).message"></outline>
								<outline text="};"></outline>
								</outline>
							<outline text="callback (err, undefined);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="},"></outline>
						</outline>
					<outline text="dataType: &quot;json&quot;"></outline>
					<outline text="});"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text=""></outline>
			<outline text=""></outline>
			<outline text="function twChatLike (id, nameChatLog, callback) { //9/27/15 by DW">
				<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
					<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="oauth_token: localStorage.twOauthToken,"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:43 GMT" pgfnum="43205" text="oauth_token_secret: localStorage.twOauthTokenSecret,"></outline>
					<outline text="chatLog: nameChatLog, //10/26/15 by DW"></outline>
					<outline text="flNotWhitelisted: false,"></outline>
					<outline text="id: id"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var url = twGetDefaultServer () + &quot;chatlike?&quot; + twBuildParamList (paramtable);"></outline>
				<outline text="$.ajax ({">
					<outline text="type: &quot;GET&quot;,"></outline>
					<outline text="url: url,"></outline>
					<outline text="success: function (data) {">
						<outline text="if (callback != undefined) {">
							<outline text="callback (undefined, data);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="},"></outline>
						</outline>
					<outline text="error: function (status, something, otherthing) { ">
						<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twChatLike: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
						<outline text="if (callback != undefined) {">
							<outline text="var err = {">
								<outline text="code: status.status,"></outline>
								<outline text="message: JSON.parse (status.responseText).message"></outline>
								<outline text="};"></outline>
								</outline>
							<outline text="callback (err, undefined);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="},"></outline>
						</outline>
					<outline text="dataType: &quot;json&quot;"></outline>
					<outline text="});"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="function twNewIncomingHook (description, channel, customName, urlCustomIcon, customEmoji, callback) { //8/30/15 by DW">
				<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
					<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="oauth_token: localStorage.twOauthToken,"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:43 GMT" pgfnum="43205" text="oauth_token_secret: localStorage.twOauthTokenSecret,"></outline>
					<outline text="flNotWhitelisted: false"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
					</outline>
				<outline text="if ((channel !== undefined) &amp;&amp; (channel.length &gt; 0)) {">
					<outline text="paramtable.channel = channel;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="if ((description !== undefined) &amp;&amp; (description.length &gt; 0)) {">
					<outline text="paramtable.description = description;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="if ((customName !== undefined) &amp;&amp; (customName.length &gt; 0)) {">
					<outline text="paramtable.customname = customName;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="if ((urlCustomIcon !== undefined) &amp;&amp; (urlCustomIcon.length &gt; 0)) {">
					<outline text="paramtable.urlcustomicon = urlCustomIcon;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="if ((customEmoji !== undefined) &amp;&amp; (customEmoji.length &gt; 0)) {">
					<outline text="paramtable.customemoji = customEmoji;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var url = twGetDefaultServer () + &quot;newincomingwebhook?&quot; + twBuildParamList (paramtable);"></outline>
				<outline text="console.log (&quot;twNewIncomingHook: url == &quot; + url);"></outline>
				<outline text="$.ajax ({">
					<outline text="type: &quot;GET&quot;,"></outline>
					<outline text="url: url,"></outline>
					<outline text="success: function (data) {">
						<outline text="if (callback != undefined) {">
							<outline text="callback (undefined, data);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="},"></outline>
						</outline>
					<outline text="error: function (status, something, otherthing) { ">
						<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twNewIncomingHook: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
						<outline text="if (callback != undefined) {">
							<outline text="var err = {">
								<outline text="code: status.status,"></outline>
								<outline text="message: JSON.parse (status.responseText).message"></outline>
								<outline text="};"></outline>
								</outline>
							<outline text="callback (err, undefined);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="},"></outline>
						</outline>
					<outline text="dataType: &quot;json&quot;"></outline>
					<outline text="});"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="function twNewOutgoingHook (description, channel, triggerWords, urlsToCall, customName, urlCustomIcon, customEmoji, callback) {">
				<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
					<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="oauth_token: localStorage.twOauthToken,"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:43 GMT" pgfnum="43205" text="oauth_token_secret: localStorage.twOauthTokenSecret,"></outline>
					<outline text="flNotWhitelisted: false"></outline>
					<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
					</outline>
				<outline text="if ((channel !== undefined) &amp;&amp; (channel.length &gt; 0)) {">
					<outline text="paramtable.channel = channel;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="if ((description !== undefined) &amp;&amp; (description.length &gt; 0)) {">
					<outline text="paramtable.description = description;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="if ((triggerWords !== undefined) &amp;&amp; (triggerWords.length &gt; 0)) {">
					<outline text="paramtable.triggerwords = triggerWords;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="if ((urlsToCall !== undefined) &amp;&amp; (urlsToCall.length &gt; 0)) {">
					<outline text="paramtable.urlstocall = urlsToCall;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="if ((customName !== undefined) &amp;&amp; (customName.length &gt; 0)) {">
					<outline text="paramtable.customname = customName;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="if ((urlCustomIcon !== undefined) &amp;&amp; (urlCustomIcon.length &gt; 0)) {">
					<outline text="paramtable.urlcustomicon = urlCustomIcon;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="if ((customEmoji !== undefined) &amp;&amp; (customEmoji.length &gt; 0)) {">
					<outline text="paramtable.customemoji = customEmoji;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215" text="var url = twGetDefaultServer () + &quot;newoutgoingwebhook?&quot; + twBuildParamList (paramtable);"></outline>
				<outline text="console.log (&quot;twNewOutgoingHook: url == &quot; + url);"></outline>
				<outline text="$.ajax ({">
					<outline text="type: &quot;GET&quot;,"></outline>
					<outline text="url: url,"></outline>
					<outline text="success: function (data) {">
						<outline text="if (callback != undefined) {">
							<outline text="callback (undefined, data);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="},"></outline>
						</outline>
					<outline text="error: function (status, something, otherthing) { ">
						<outline created="Wed, 12 Jun 2013 13:14:10 GMT" pgfnum="25848" text="console.log (&quot;twNewOutgoingHook: error == &quot; + JSON.stringify (status, undefined, 4));"></outline>
						<outline text="if (callback != undefined) {">
							<outline text="var err = {">
								<outline text="code: status.status,"></outline>
								<outline text="message: JSON.parse (status.responseText).message"></outline>
								<outline text="};"></outline>
								</outline>
							<outline text="callback (err, undefined);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="},"></outline>
						</outline>
					<outline text="dataType: &quot;json&quot;"></outline>
					<outline text="});"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			</outline>
		<outline text="function twUserWhitelisted (username, callback) {">
			<outline isComment="true" text="Changes">
				<outline text="11/18/14; 6:51:46 PM by DW">
					<outline text="Callback gets a boolean parameter, true if the user is whitelisted, false otherwise."></outline>
					<outline isComment="true" text="tcp.httpreadurl (&quot;http://twitter.porkchop.io/iswhitelisted?screen_name=nyt&quot;)"></outline>
					</outline>
				</outline>
			<outline text=""></outline>
			<outline text="var apiurl = twGetDefaultServer () + &quot;iswhitelisted?screen_name=&quot; + username;"></outline>
			<outline text="console.log (&quot;twUserWhitelisted: apiurl == &quot; + apiurl);"></outline>
			<outline text=""></outline>
			<outline text="$.ajax ({">
				<outline text="type: &quot;GET&quot;,"></outline>
				<outline text="url: apiurl,"></outline>
				<outline text="success: function (data) {">
					<outline text="callback (data);"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="error: function (status, something, otherthing) { ">
					<outline text="callback (false);"></outline>
					<outline text="},"></outline>
					</outline>
				<outline text="dataType: &quot;json&quot;"></outline>
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline created="Sun, 04 May 2014 21:16:35 GMT" pgfnum="41024" text="function twGetTwitterConfig (callback) {">
			<outline created="Mon, 30 Jun 2014 15:25:29 GMT" pgfnum="42616" text="if (twIsTwitterConnected ()) {">
				<outline text="$.ajax ({">
					<outline text="type: &quot;GET&quot;,"></outline>
					<outline text="url: twGetDefaultServer () + &quot;configuration?oauth_token=&quot; + encodeURIComponent (localStorage.twOauthToken) + &quot;&amp;oauth_token_secret=&quot; + encodeURIComponent (localStorage.twOauthTokenSecret),"></outline>
					<outline text="success: function (data) {">
						<outline created="Tue, 06 May 2014 20:10:58 GMT" pgfnum="41207" text="twStorageData.twitterConfig = data;"></outline>
						<outline text="if (callback != undefined) {">
							<outline text="callback ();"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="},"></outline>
						</outline>
					<outline text="error: function (status) { ">
						<outline created="Sat, 01 Jun 2013 14:45:29 GMT" pgfnum="24939" text="console.log (&quot;getTwitterConfig: error.&quot;);"></outline>
						<outline text="if (callback != undefined) {">
							<outline text="callback ();"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="},"></outline>
						</outline>
					<outline text="dataType: &quot;json&quot;"></outline>
					<outline text="});"></outline>
					</outline>
				<outline created="Mon, 30 Jun 2014 15:25:32 GMT" pgfnum="42617" text="}"></outline>
				</outline>
			<outline created="Tue, 06 May 2014 20:10:06 GMT" pgfnum="41205" text="}"></outline>
			</outline>
		<outline created="Tue, 11 Jun 2013 13:25:15 GMT" pgfnum="25724" text="function twPrefsToStorage (appPrefs) {">
			<outline created="Fri, 01 Feb 2013 22:40:26 GMT" pgfnum="18084" text="function secondsSince (when) { ">
				<outline created="Fri, 01 Feb 2013 00:33:21 GMT" pgfnum="18031" text="var now = new Date ();"></outline>
				<outline text="when = new Date (when);"></outline>
				<outline created="Fri, 01 Feb 2013 22:41:19 GMT" pgfnum="18089" text="return ((now - when) / 1000);"></outline>
				<outline created="Mon, 24 Feb 2014 15:51:02 GMT" pgfnum="37929" text="}"></outline>
				</outline>
			<outline created="Thu, 06 Jun 2013 19:04:01 GMT" pgfnum="25297" text="function padWithZeros (num, ctplaces) { ">
				<outline created="Thu, 06 Jun 2013 19:04:50 GMT" pgfnum="25301" text="var s = num.toString ();"></outline>
				<outline created="Thu, 06 Jun 2013 19:04:23 GMT" pgfnum="25299" text="while (s.length &lt; ctplaces) {">
					<outline created="Thu, 06 Jun 2013 19:05:07 GMT" pgfnum="25302" text="s = &quot;0&quot; + s;"></outline>
					<outline created="Thu, 06 Jun 2013 19:04:43 GMT" pgfnum="25300" text="}"></outline>
					</outline>
				<outline created="Thu, 06 Jun 2013 19:12:58 GMT" pgfnum="25311" text="return (s);"></outline>
				<outline created="Thu, 06 Jun 2013 19:04:11 GMT" pgfnum="25298" text="}"></outline>
				</outline>
			<outline created="Wed, 24 Jul 2013 15:22:40 GMT" pgfnum="28194" text="function getDatePath (theDate) {">
				<outline created="Fri, 15 Jun 2007 22:48:17 GMT" text="var month = padWithZeros (theDate.getMonth () + 1, 2);"></outline>
				<outline created="Fri, 15 Jun 2007 22:48:17 GMT" text="var day = padWithZeros (theDate.getDate (), 2);"></outline>
				<outline created="Wed, 24 Jul 2013 15:27:43 GMT" pgfnum="28199" text="var year = theDate.getFullYear ();"></outline>
				<outline created="Fri, 15 Jun 2007 22:46:16 GMT" text="return (year + &quot;/&quot; + month + &quot;/&quot; + day + &quot;/&quot;);"></outline>
				<outline created="Wed, 24 Jul 2013 15:23:09 GMT" pgfnum="28195" text="}"></outline>
				</outline>
			<outline created="Thu, 13 Jun 2013 21:46:08 GMT" pgfnum="26079" text="var jsontext = JSON.stringify (appPrefs, undefined, 4), whenstart = new Date ();"></outline>
			<outline text="twUploadFile (twStorageData.pathAppPrefs, jsontext, &quot;application/json&quot;, true, function (data) {">
				<outline text="if (twStorageData.flPrefsCalendarBackup) { //4/24/15 by DW">
					<outline text="var archivepath = getDatePath (whenstart) + twStorageData.pathAppPrefs;"></outline>
					<outline text="twUploadFile (archivepath, jsontext, &quot;application/json&quot;, true, function (data) {">
						<outline text="console.log (&quot;twPrefsToStorage: uploaded \&quot;&quot; + archivepath + &quot;\&quot; to server in &quot; + secondsSince (whenstart) + &quot; secs.&quot;);"></outline>
						<outline text="});"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline text="else {">
					<outline text="console.log (&quot;twPrefsToStorage: uploaded &quot; + twStorageData.pathAppPrefs + &quot; to server in &quot; + secondsSince (whenstart) + &quot; secs.&quot;);"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="});"></outline>
				</outline>
			<outline created="Tue, 11 Jun 2013 13:25:22 GMT" pgfnum="25725" text="}"></outline>
			</outline>
		<outline created="Tue, 11 Jun 2013 13:43:12 GMT" pgfnum="25729" text="function twStorageToPrefs (appPrefs, callback) {">
			<outline isComment="true" text="Changes">
				<outline text="12/13/18; 10:53:13 AM by DW">
					<outline text="littleoutliner would crash if the JSON file is empty. This could happen if the server runs out of space. Now it doesn't crash."></outline>
					</outline>
				<outline text="1/20/15; 5:56:15 PM by DW">
					<outline text="The first parameter to twGetFile was undefined, so the value we passed was &quot;undefined&quot; and that's where we were storing the users prefs. Fixed."></outline>
					</outline>
				<outline text="9/12/14; 11:14:53 AM by DW">
					<outline text="We need to be able to communicate to the caller that there was an error, but it might be benign -- it might be file-not-found. If this happens at startup, the caller should assume that this is the user's first visit. Otherwise it's a serious error."></outline>
					</outline>
				<outline text="9/1/14; 2:16:22 PM by DW">
					<outline text="Either you're getting server-based prefs or they're coming from localStorage. Previously, we'd fall through to the localStorage version if we failed to get them from the server. Not good if you're using this for different identities. "></outline>
					</outline>
				</outline>
			<outline created="Fri, 01 Feb 2013 22:40:26 GMT" pgfnum="18084" text="function secondsSince (when) { ">
				<outline created="Fri, 01 Feb 2013 00:33:21 GMT" pgfnum="18031" text="var now = new Date ();"></outline>
				<outline text="when = new Date (when);"></outline>
				<outline created="Fri, 01 Feb 2013 22:41:19 GMT" pgfnum="18089" text="return ((now - when) / 1000);"></outline>
				<outline created="Mon, 24 Feb 2014 15:51:02 GMT" pgfnum="37929" text="}"></outline>
				</outline>
			<outline text="var whenstart = new Date ();"></outline>
			<outline text="twGetFile (twStorageData.pathAppPrefs, true, true, function (error, data) {">
				<outline text="if (data !== undefined) {">
					<outline text="try {">
						<outline created="Tue, 11 Jun 2013 13:43:44 GMT" pgfnum="25734" text="var jstruct = JSON.parse (data.filedata);"></outline>
						<outline text="for (var x in jstruct) {">
							<outline text="appPrefs [x] = jstruct [x];"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="console.log (&quot;twStorageToPrefs: downloaded &quot; + data.filedata.length + &quot; chars from server in &quot; + secondsSince (whenstart) + &quot; secs.&quot;);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="catch (err) {">
						<outline text="console.log (&quot;twStorageToPrefs: error parsing &quot; + twStorageData.pathAppPrefs + &quot; JSON == &quot; + err.message);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="if (callback != undefined) { //8/16/14 by DW">
						<outline text="callback ();"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline text="else { //call the callback even on an error">
					<outline text="if (callback != undefined) { ">
						<outline text="var errorInfo = {">
							<outline text="flFileNotFound: false"></outline>
							<outline text="};"></outline>
							</outline>
						<outline text="if (error.status == 500) {">
							<outline text="var s3response = JSON.parse (error.responseText);"></outline>
							<outline text="if (s3response.code == &quot;NoSuchKey&quot;) {">
								<outline text="errorInfo.flFileNotFound = true;"></outline>
								<outline text="}"></outline>
								</outline>
							<outline text="}"></outline>
							</outline>
						<outline text="callback (errorInfo);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline text="});"></outline>
				</outline>
			<outline created="Tue, 11 Jun 2013 13:43:22 GMT" pgfnum="25731" text="}"></outline>
			</outline>
		<outline text="function twStorageStartup (appPrefs, callback) {">
			<outline isComment="true" text="Changes">
				<outline text="10/20/14; 10:47:47 AM by DW">
					<outline text="The callback takes one param, a boolean. If it's false, the startup failed, and the app should tell the user to try to reload the app."></outline>
					</outline>
				</outline>
			<outline text="twStorageToPrefs (appPrefs, function (errorInfo) {">
				<outline text="var flStartupFail = false;"></outline>
				<outline text="if (errorInfo != undefined) { ">
					<outline text="console.log (&quot;twStorageStartup: errorInfo == &quot; + JSON.stringify (errorInfo, undefined, 4));"></outline>
					<outline text="if (errorInfo.flFileNotFound != undefined) {">
						<outline text="if (!errorInfo.flFileNotFound) { //some error other than file-not-found (which is a benign error, first-time user">
							<outline text="if (callback != undefined) { //startup fail">
								<outline text="callback (false);"></outline>
								<outline text="flStartupFail = true;"></outline>
								<outline text="}"></outline>
								</outline>
							<outline text="}"></outline>
							</outline>
						<outline text="}"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline text="if (!flStartupFail) {">
					<outline text="if (callback != undefined) { //good start">
						<outline text="callback (true);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function twSetPrefs (thePrefs, callback) { //11/23/15 by DW">
			<outline text="twStorageToPrefs (thePrefs, function () {">
				<outline text="callback ();"></outline>
				<outline text="twPrefsToStorage (thePrefs); "></outline>
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function twReadHttpWithProxy (urlToRead, callback) { //5/9/16 by DW">
			<outline created="Sat, 09 Aug 2014 15:42:15 GMT" pgfnum="43199" text="var paramtable = {">
				<outline created="Sat, 09 Aug 2014 15:42:28 GMT" pgfnum="43203" text="url: urlToRead"></outline>
				<outline created="Sat, 09 Aug 2014 15:42:23 GMT" pgfnum="43202" text="}"></outline>
				</outline>
			<outline text="var apiUrl = twGetDefaultServer () + &quot;httpreadurl?&quot; + twBuildParamList (paramtable), whenstart = new Date ();"></outline>
			<outline text="readHttpFile (apiUrl, function (data) {">
				<outline text="console.log (&quot;twReadHttpWithProxy: length == &quot; + data.length);"></outline>
				<outline text="if (callback !== undefined) {">
					<outline text="callback (data); "></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="});"></outline>
				</outline>
			<outline text="}"></outline>
			</outline>
		<outline text="function nodeStorageApp (consts, prefs) { //8/15/17 by DW">
			<outline text="var myConsts = consts, myPrefs = prefs;"></outline>
			<outline text="var flPrefsChanged = false;"></outline>
			<outline text="var me = this;"></outline>
			<outline text=""></outline>
			<outline text="function everySecond () {">
				<outline text="var now = clockNow ();"></outline>
				<outline created="Thu, 13 Jun 2013 23:08:07 GMT" pgfnum="26123" text="twUpdateTwitterMenuItem (&quot;idTwitterConnectMenuItem&quot;);"></outline>
				<outline text="twUpdateTwitterUsername (&quot;idTwitterUsername&quot;);"></outline>
				<outline text="if (flPrefsChanged) {">
					<outline text="twPrefsToStorage (myPrefs);"></outline>
					<outline text="flPrefsChanged = false;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="if (me.everySecond !== undefined) { //user has installed a callback">
					<outline text="me.everySecond ();"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text=""></outline>
			<outline text="this.flStartupFail = false;"></outline>
			<outline text=""></outline>
			<outline text="this.prefsChanged = function () {">
				<outline text="flPrefsChanged = true;"></outline>
				<outline text="};"></outline>
				</outline>
			<outline text="this.start = function (callback) {">
				<outline text="function docallback (flConnected) {">
					<outline text="if (callback !== undefined) {">
						<outline text="callback (flConnected);"></outline>
						<outline text="}"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline text="twStorageData.urlTwitterServer = myConsts.urlTwitterServer;"></outline>
				<outline text="if (localStorage.urlTwitterServer !== undefined) { ">
					<outline text="twStorageData.urlTwitterServer = localStorage.urlTwitterServer;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="if (myConsts.pathAppPrefs !== undefined) {">
					<outline text="twStorageData.pathAppPrefs = myConsts.pathAppPrefs;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text=""></outline>
				<outline text="if (twGetOauthParams ()) { //redirects if OAuth params are present, returns true">
					<outline text="console.log (&quot;nodeStorageApp.start: redirecting after processing OAuth params.&quot;);"></outline>
					<outline text="docallback (false);"></outline>
					<outline text="return;"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text=""></outline>
				<outline text="if (twIsTwitterConnected ()) {">
					<outline text="twStorageStartup (myPrefs, function (flGoodStart) {">
						<outline text="this.flStartupFail = !flGoodStart;"></outline>
						<outline text="if (flGoodStart) {">
							<outline text="console.log (&quot;nodeStorageApp: myPrefs == &quot; + jsonStringify (myPrefs));"></outline>
							<outline text="twGetTwitterConfig (function () { //twStorageData.twitterConfig will have information from twitter.com">
								<outline text="twGetUserInfo (twGetScreenName (), function (userInfo) {">
									<outline text="me.userInfo = userInfo;"></outline>
									<outline text="docallback (true);"></outline>
									<outline text="self.setInterval (everySecond, 1000); "></outline>
									<outline text="});"></outline>
									</outline>
								<outline text="});"></outline>
								</outline>
							<outline text="}"></outline>
							</outline>
						<outline text="else {">
							<outline text="docallback (false);"></outline>
							<outline text="}"></outline>
							</outline>
						<outline text="});"></outline>
						</outline>
					<outline text="}"></outline>
					</outline>
				<outline text="else {">
					<outline text="docallback (false);"></outline>
					<outline text="}"></outline>
					</outline>
				<outline text="}"></outline>
				</outline>
			<outline text="};"></outline>
			</outline>
		</body>
	</opml>
